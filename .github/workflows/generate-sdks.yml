name: Generate SDKs

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  generate-js-client:
    runs-on: ubuntu-latest
    name: Generate js sdk
    steps:

      - name: Checkout OpenAPI
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Generate JS sdk
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: javascript
          openapi-file: openapi-3.0.yaml
          command-args: --additional-properties=moduleName=dofusdude,projectName=dofusdude-js,licenseName=MIT
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16.x
      
      - name: Generate package-lock.json
        run: |
          cp -r javascript-client javascript-client-cp
          cd javascript-client-cp
          npm i
          cp package-lock.json ../javascript-client/package-lock.json
          cd ../javascript-client
          mkdir -p .github/workflows/
          printf '%s\n' 'name: Node.js CI' 'on:' '  push:' '    branches: [ "main" ]' '  pull_request:' '    branches: [ "main" ]' 'jobs:' '  build:' '    runs-on: ubuntu-latest' '    strategy:' '      matrix:' '        node-version: [14.x, 16.x, 18.x]' '    steps:' '    - uses: actions/checkout@v3' '    - name: Use Node.js ${{ matrix.node-version }}' '      uses: actions/setup-node@v3' '      with:' '        node-version: ${{ matrix.node-version }}' '        cache: npm' '    - run: npm ci' '    - run: npm run build --if-present' '    - run: npm test' '' > .github/workflows/testing.yml
          printf '%s\n' 'name: Node.js Package' 'on:' '  release:' '    types: [created]' 'jobs:' '  build:' '    runs-on: ubuntu-latest' '    steps:' '      - uses: actions/checkout@v3' '      - uses: actions/setup-node@v3' '        with:' '          node-version: 16' '      - run: npm ci' '      - run: npm test' '  publish-npm:' '    needs: build' '    runs-on: ubuntu-latest' '    steps:' '      - uses: actions/checkout@v3' '      - uses: actions/setup-node@v3' '        with:' '          node-version: 16' '          registry-url: https://registry.npmjs.org/' '      - run: npm ci' '      - run: npm publish' '        env:' '          NODE_AUTH_TOKEN: secrets.NPM_TOKEN' > .github/workflows/publish.yml 
          sed -i 's/secrets.NPM_TOKEN/\$\{\{secrets.NPM_TOKEN\}\}/g' .github/workflows/publish.yml
          sed -i 's/\\"/"/g' README.md
          cd ..

      - name: Pushes to another repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          API_TOKEN_GITHUB: ${{ secrets.PUSH_GITHUB_TOKEN }}
        with:
          source-directory: 'javascript-client'
          destination-github-username: 'dofusdude'
          destination-repository-name: 'dofusdude-js'
          user-email: stelzo@steado.de
          target-branch: main
          
  generate-ts-client:
    runs-on: ubuntu-latest
    name: Generate ts sdk
    steps:

      - name: Checkout OpenAPI
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Generate TS sdk
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: typescript-axios
          openapi-file: openapi-3.0.yaml
          command-args: --additional-properties=npmName=dofusdude-ts
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16.x
      
      - name: Generate package-lock.json
        run: |
          cp -r typescript-axios-client typescript-axios-client-cp
          cd typescript-axios-client-cp
          npm i
          cp package-lock.json ../typescript-axios-client/package-lock.json
          cd ../typescript-axios-client
          mkdir -p .github/workflows/
          printf '%s\n' 'name: Node.js CI' 'on:' '  push:' '    branches: [ "main" ]' '  pull_request:' '    branches: [ "main" ]' 'jobs:' '  build:' '    runs-on: ubuntu-latest' '    strategy:' '      matrix:' '        node-version: [14.x, 16.x, 18.x]' '    steps:' '    - uses: actions/checkout@v3' '    - name: Use Node.js ${{ matrix.node-version }}' '      uses: actions/setup-node@v3' '      with:' '        node-version: ${{ matrix.node-version }}' '        cache: npm' '    - run: npm ci' '    - run: npm run build --if-present' '' > .github/workflows/build.yml
          printf '%s\n' 'name: Node.js Package' 'on:' '  release:' '    types: [created]' 'jobs:' '  build:' '    runs-on: ubuntu-latest' '    steps:' '      - uses: actions/checkout@v3' '      - uses: actions/setup-node@v3' '        with:' '          node-version: 16' '      - run: npm ci' '  publish-npm:' '    needs: build' '    runs-on: ubuntu-latest' '    steps:' '      - uses: actions/checkout@v3' '      - uses: actions/setup-node@v3' '        with:' '          node-version: 16' '          registry-url: https://registry.npmjs.org/' '      - run: npm ci' '      - run: npm publish' '        env:' '          NODE_AUTH_TOKEN: secrets.NPM_TOKEN' > .github/workflows/publish.yml 
          sed -i 's/secrets.NPM_TOKEN/\$\{\{secrets.NPM_TOKEN\}\}/g' .github/workflows/publish.yml
          sed -i 's/\\"/"/g' README.md
          cd ..

      - name: Pushes to another repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY_TS }}
          API_TOKEN_GITHUB: ${{ secrets.PUSH_GITHUB_TOKEN }}
        with:
          source-directory: 'typescript-axios-client'
          destination-github-username: 'dofusdude'
          destination-repository-name: 'dofusdude-ts'
          user-email: stelzo@steado.de
          target-branch: main
          
          
  generate-go-client:
    runs-on: ubuntu-latest
    name: Generate go sdk
    steps:

      - name: Checkout OpenAPI
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Generate go sdk
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: go
          openapi-file: openapi-3.0.yaml
          command-args: --additional-properties=packageName=dodugo
      
      - name: Setup Go environment
        uses: actions/setup-go@v3.3.0
        with:
          check-latest: true
          go-version-file: go-client/go.mod
          cache-dependency-path: go-client/go.sum
          
    
      - name: Add actions
        run: |
          cd go-client
          mkdir -p .github/workflows/
          printf '%s\n' 'name: Go' 'on:' '  push:' '    branches: [ main ]' '  pull_request:' '    branches: [ main ]' 'jobs:' '  build:' '    runs-on: ubuntu-latest' '    steps:' '    - uses: actions/checkout@v2' '    - name: Set up Go' '      uses: actions/setup-go@v2' '      with:' '        go-version: 1.19' '    - name: Build' '      run: go build -v ./...' '    - name: Test' '      run: go test -v ./...' > .github/workflows/build.yml
          sed -i 's/GIT_USER_ID\/GIT_REPO_ID/\dofusdude\/dodugo/g' go.mod
          sed -i 's/GIT_USER_ID\/GIT_REPO_ID/\dofusdude\/dodugo/g' README.md
          sed -i 's/\\"/"/g' README.md
          go get -u ./...
          go mod tidy
          cd ..

      - name: Pushes to sdk repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY_GO }}
          API_TOKEN_GITHUB: ${{ secrets.PUSH_GITHUB_TOKEN }}
        with:
          source-directory: 'go-client'
          destination-github-username: 'dofusdude'
          destination-repository-name: 'dodugo'
          user-email: stelzo@steado.de
          target-branch: main
          
      
  generate-python-client:
    runs-on: ubuntu-latest
    name: Generate python sdk
    steps:

      - name: Checkout OpenAPI
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
          
      - name: OpenAPI API Version Print
        uses: stelzo/openapi-api-version-print@v1
        id: api-version-print
        with:
          specFile: openapi-3.0.yaml

      - name: Generate python sdk
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: python
          openapi-file: openapi-3.0.yaml
          command-args: --additional-properties=packageName=dofusdude-py,projectName=dofusdude,packageUrl=https://github.com/dofusdude/dofusdude-py,packageVersion=${{steps.api-version-print.outputs.apiVersion}}
      
      - name: Setup Python environment
        uses: actions/setup-python@v4.2.0
        with:
          python-version: 3.8

      - name: Pushes to sdk repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY_PY }}
          API_TOKEN_GITHUB: ${{ secrets.PUSH_GITHUB_TOKEN }}
        with:
          source-directory: 'python-client'
          destination-github-username: 'dofusdude'
          destination-repository-name: 'dofusdude-py'
          user-email: stelzo@steado.de
          target-branch: main
