openapi: 3.0.0
x-stoplight:
  id: ezdjxlif28ceb
info:
  title: dofusdude
  version: 0.9.3
  description: "# A project for you - the developer.\nThe all-in-one toolbelt for your next Ankama related project.\n\n## Client SDKs\n- [Javascript](https://github.com/dofusdude/dofusdude-js) `npm i dofusdude-js --save`\n- [Typescript](https://github.com/dofusdude/dofusdude-ts) `npm i dofusdude-ts --save`\n- [Go](https://github.com/dofusdude/dodugo) `go get -u github.com/dofusdude/dodugo`\n- [Python](https://github.com/dofusdude/dofusdude-py) `pip install dofusdude`\n- [PHP](https://github.com/dofusdude/dofusdude-php)\n- [Java](https://github.com/dofusdude/dofusdude-java) Maven with GitHub packages setup\n\nEverything, including this site, is generated out of the [Docs Repo](https://github.com/dofusdude/api-docs). Consider it the Single Source of Truth. If there is a problem with the SDKs, create an issue there.\n\nYour favorite language is missing? Please let me know!\n\n# Main Features\n- \U0001F977 **Seamless Auto-Update** load data in the background when a new Dofus version is released and serving it within 10 minutes with atomic data source switching. No downtime and no effects for the user, just always up-to-date.\n\n- ⚡ **Blazingly Fast** all data in-memory, aggressive caching over short time spans, HTTP/2 multiplexing, written in Go, optimized for low latency, hosted on bare metal in \U0001F1E9\U0001F1EA.\n\n- \U0001F4E8 **Discord Integration** Ankama related RSS and Almanax feeds to post to Discord servers with advanced features like filters or mentions. Use the endpoints as a dev or the official [Web Client](https://discord.dofusdude.com) as a user.\n\n- \U0001FA78 **Dofus 2 Beta** from stable to bleeding edge by replacing /dofus2 with /dofus2beta.\n\n- \U0001F5E3️ **Multilingual** supporting _en_, _fr_, _es_, _pt_ including the dropped languages from the Dofus website _de_ and _it_.\n\n- \U0001F9E0 **Search by Relevance** allowing typos in name and description, handled by language specific text analysis and indexing.\n\n- \U0001F575️ **Complete** actual data from the game including items invisible to the encyclopedia like quest items.\n\n- \U0001F5BC️ **HD Images** rendering game assets to high-res images with up to 800x800 px.\n\n... and much more on the Roadmap on my [Discord](https://discord.gg/3EtHskZD8h).\n"
  contact:
    name: Survival
    url: "https://discord.gg/3EtHskZD8h"
    email: stelzo@steado.de
servers:
  - url: "https://api.dofusdu.de"
    description: API
paths:
  "/{game}/{language}/items/search":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
          example: fr
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Search All Items
      responses:
        "200":
          description: Items Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Items-List-Entry-Typed"
              examples:
                query "apple":
                  value:
                    - ankama_id: 21445
                      name: Apple Core
                      type:
                        name: Event
                        id: 12
                      item_subtype: quest
                      level: 1
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/126095.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/126095-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/126095-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/126095-800.png"
                    - ankama_id: 18332
                      name: Crate of Apis
                      type:
                        name: Ohwymi
                      item_subtype: quest
                      level: 80
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/15056.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/15056-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/15056-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/15056-800.png"
        "400":
          description: |
            Bad Request

            Possibilities:
            - empty or no query
        "404":
          description: |-
            Not Found

            Possibilities:
            - no hits for query
      operationId: get-items-all-search
      description: Search in all names and descriptions of Dofus items (including all subtypes) with a query.
      parameters:
        - schema:
            type: string
            example: atcham
          in: query
          name: query
          description: case sensitive search query
          required: true
        - schema:
            type: string
            example: Bottes
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name across all item_subtypes
        - schema:
            type: integer
            format: int32
            example: 190
            maximum: 200
            minimum: 0
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            example: 200
            maximum: 200
            format: int32
            minimum: 0
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            default: 8
            minimum: 1
            maximum: 100
            example: 8
          in: query
          name: limit
          description: maximum number of returned results
        - schema:
            type: array
            items:
              type: string
            example:
              - boots
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      tags:
        - game
      x-stoplight:
        id: eeoi1h7wagrmw
  "/{game}/{language}/mounts/search":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
          example: fr
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Search Mounts
      tags:
        - mounts
      responses:
        "200":
          description: Mounts Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Mount-List-Entry"
              examples:
                almond rhineetle:
                  value:
                    - ankama_id: 199
                      name: Almond and Indigo Rhineetle
                      family_name: Rhineetle
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/mount/199.png"
                        sd: "https://api.dofusdu.de/dofus2/img/mount/199-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/mount/199-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/mount/199-800.png"
                    - ankama_id: 198
                      name: Almond and Orchid Rhineetle
                      family_name: Rhineetle
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/mount/198.png"
                        sd: "https://api.dofusdu.de/dofus2/img/mount/198-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/mount/198-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/mount/198-800.png"
        "400":
          description: |
            Bad Request

            Possibilities:
            - empty or no query
        "404":
          description: |-
            Not Found

            Possibilities:
            - no hits for query
      operationId: get-mounts-search
      description: Search in all names and descriptions of mounts with a query.
      parameters:
        - schema:
            type: string
            example: Dorée
          in: query
          name: query
          description: case sensitive search query
          required: true
        - schema:
            type: string
            example: Dragodinde
          in: query
          name: "filter[family_name]"
          description: only results with the translated family name
        - schema:
            type: integer
            default: 8
            example: 8
            minimum: 1
            maximum: 100
          in: query
          name: limit
          description: maximum number of returned results
      x-stoplight:
        id: 55fkjddmfhh7n
  "/{game}/{language}/sets/search":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          example: dofus2
          enum:
            - dofus2
            - dofus2beta
        name: game
        in: path
        required: true
    get:
      summary: Search Sets
      responses:
        "200":
          description: Sets Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Set-List-Entry"
              examples:
                Bouftou:
                  value:
                    - ankama_id: 4
                      name: Panoplie du Bouftou Royal
                      items: 7
                      level: 32
                    - ankama_id: 1
                      name: Panoplie du Bouftou
                      items: 7
                      level: 20
                    - ankama_id: 43
                      name: Panoplie du Boufcoul
                      items: 7
                      level: 55
        "400":
          description: |
            Bad Request

            Possibilities:
            - empty or no query
        "404":
          description: |-
            Not Found

            Possibilities:
            - no hits for query
      operationId: get-sets-search
      description: Search in all names and descriptions of sets with a query.
      parameters:
        - schema:
            type: string
            example: Des
          in: query
          name: query
          description: case sensitive search query
          required: true
        - schema:
            type: integer
            minimum: 1
            maximum: 200
            format: int32
            example: 195
          in: query
          name: "filter[min_highest_equipment_level]"
          description: only results where the equipment with the highest level is above or equal to this value
        - schema:
            type: integer
            minimum: 1
            maximum: 200
            format: int32
            example: 200
          in: query
          name: "filter[max_highest_equipment_level]"
          description: only results where the equipment with the highest level is below or equal to this value
        - schema:
            type: integer
            default: 8
            example: 8
            minimum: 1
            maximum: 100
          in: query
          name: limit
          description: maximum number of returned results
        - schema:
            type: boolean
          in: query
          name: "filter[is_cosmetic]"
          description: "filter sets based on if they only got cosmetic items in it. If true, the item ids are for the cosmetic endpoints instead of equipment."
      tags:
        - sets
      x-stoplight:
        id: 7pwfbuzuxnnuq
  "/{game}/{language}/items/quest/search":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
          example: es
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          example: dofus2
          enum:
            - dofus2
            - dofus2beta
        name: game
        in: path
        required: true
    get:
      summary: Search Quest Items
      tags:
        - quest items
      responses:
        "200":
          description: Quest Items Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item-List-Entry"
              examples:
                kouto:
                  value:
                    - ankama_id: 18114
                      name: Koutoulou Moth
                      type:
                        name: Sufokia
                        id: 7
                      level: 200
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/15936.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/15936-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/15936-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/15936-800.png"
                    - ankama_id: 18109
                      name: P'Koutoulou Zothoth
                      type:
                        name: Sufokia
                      level: 1
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/8019.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/8019-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/8019-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/8019-800.png"
        "400":
          description: |
            Bad Request

            Possibilities:
            - empty or no query
        "404":
          description: |-
            Not Found

            Possibilities:
            - no hits for query
      operationId: get-items-quest-search
      description: Search in all names and descriptions of quest items with a query.
      parameters:
        - schema:
            type: string
            example: Ficha
          in: query
          name: query
          description: case sensitive search query
          required: true
        - schema:
            type: string
            example: Justicieros
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            example: 60
            minimum: 0
            maximum: 200
            format: int32
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 200
            example: 70
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            default: 8
            example: 8
            minimum: 1
            maximum: 100
          in: query
          description: maximum number of returned results
          name: limit
        - schema:
            type: array
            items:
              type: string
            example:
              - vigilantes
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: e7dmshthuyg5m
  "/{game}/{language}/items/consumables/search":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Search Consumables
      responses:
        "200":
          description: Consumables Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item-List-Entry"
              examples:
                'query "bar", filter[type_name] "beer"':
                  value:
                    - ankama_id: 19954
                      name: Barbeerd
                      type:
                        name: Beer
                        id: 5
                      level: 1
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/37004.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/37004-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/37004-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/37004-800.png"
                    - ankama_id: 24042
                      name: Barroll Brewski
                      type:
                        name: Beer
                      level: 1
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/164790.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/164790-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/164790-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/164790-800.png"
        "400":
          description: |
            Bad Request

            Possibilities:
            - empty or no query
        "404":
          description: |-
            Not Found

            Possibilities:
            - no hits for query
      operationId: get-items-consumables-search
      description: Search in all names and descriptions of consumable items with a query.
      parameters:
        - schema:
            type: string
            example: Wholewrite
          in: query
          name: query
          description: case sensitive search query
          required: true
        - schema:
            type: string
            example: Bread
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            format: int32
            maximum: 200
            example: 1
            minimum: 1
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            format: int32
            maximum: 200
            minimum: 1
            example: 200
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            default: 8
            example: 8
            minimum: 1
            maximum: 100
          in: query
          name: limit
          description: maximum number of returned results
        - schema:
            type: array
            items:
              type: string
            example:
              - bread
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      tags:
        - consumables
      x-stoplight:
        id: 6ogh4aj4k3vns
  "/{game}/{language}/items/resources/search":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Search Resources
      tags:
        - resources
      responses:
        "200":
          description: Resources Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item-List-Entry"
              examples:
                'query "tiwabbit", filter[type_name] "hair"':
                  value:
                    - ankama_id: 14459
                      name: Tiwabbit Whiskers
                      type:
                        name: Hair
                        id: 3
                      level: 45
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/54693.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/54693-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/54693-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/54693-800.png"
                    - ankama_id: 646
                      name: Black Tiwabbit Hair
                      type:
                        name: Hair
                      level: 46
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/54195.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/54195-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/54195-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/54195-800.png"
        "400":
          description: |
            Bad Request

            Possibilities:
            - empty or no query
        "404":
          description: |-
            Not Found

            Possibilities:
            - no hits for query
      operationId: get-items-resource-search
      description: Search in all names and descriptions of resource items with a query.
      parameters:
        - schema:
            type: string
            example: snowdew
          in: query
          name: query
          description: case sensitive search query
          required: true
        - schema:
            type: string
            example: plant
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            example: 150
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            example: 200
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            default: 8
            example: 8
            minimum: 1
            maximum: 100
          in: query
          name: limit
          description: maximum number of returned results
        - schema:
            type: array
            items:
              type: string
            example:
              - plant
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: l2f1uw9hdicac
  "/{game}/{language}/search":
    get:
      summary: Game Search
      responses:
        "200":
          description: Game Search Result
          content:
            application/json:
              schema:
                type: array
                x-examples:
                  Example 1:
                    - name: Paztek Sandals
                      ankama_id: 20463
                      type: items-equipment
                    - name: Paztek Mask
                      ankama_id: 20465
                      type: items-equipment
                    - name: Paztek Cloak
                      ankama_id: 20464
                      type: items-equipment
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name of the hit. The query could still have matched with the description only.
                    ankama_id:
                      type: integer
                      description: Ankama ID for retrieving more details in the type specific endpoint.
                    type:
                      type: string
                      description: Type classification
              examples:
                'query "paztek", filter[type] "beer"':
                  value:
                    - name: Paztek Sandals
                      ankama_id: 20463
                      type: items-equipment
                    - name: Paztek Mask
                      ankama_id: 20465
                      type: items-equipment
                    - name: Paztek Cloak
                      ankama_id: 20464
                      type: items-equipment
        "400":
          description: |
            Bad Request

            Possibilities:
            - empty or no query
            - filter[type] does not exist
        "404":
          description: |-
            Not Found

            Possibilities:
            - no hits for query
      operationId: get-game-search
      description: Search in all names and descriptions of all supported types in the game. For the list of supported types see the endpoint /dofus2/meta/search/types.
      parameters:
        - schema:
            type: string
            example: paztek
          in: query
          name: query
          description: search query
          required: true
        - schema:
            type: array
            uniqueItems: true
            example:
              - items-equipment
            items:
              type: string
              enum:
                - items-consumables
                - items-cosmetics
                - items-resources
                - items-equipment
                - items-quest_items
                - mounts
                - sets
          in: query
          name: "filter[type]"
          description: only results with all specific type
          explode: false
        - schema:
            type: integer
            default: 8
            example: 8
            minimum: 1
            maximum: 100
          in: query
          name: limit
          description: maximum number of returned results
        - schema:
            type: array
            uniqueItems: true
            example:
              - level
            items:
              type: string
              enum:
                - level
                - image_urls
                - type
          explode: false
          in: query
          name: "fields[item]"
          description: adds fields from the item search to the list entries if the hit is a item. Multiple comma separated values allowed.
        - schema:
            type: array
            items:
              type: string
            example:
              - boots
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: 'multi-filter results with the english item type name, including "mount" and "set" from filter[type]. Add with "wood" or "+wood" and exclude with "-wood".'
          explode: false
      tags:
        - game
      x-stoplight:
        id: zxx3tt0z25gz8
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
  "/{game}/{language}/items/equipment/search":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Search Equipment
      tags:
        - equipment
      responses:
        "200":
          description: Equipment Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item-List-Entry"
              examples:
                query "hat":
                  value:
                    - ankama_id: 8630
                      name: Hatter Lily
                      type:
                        name: Hat
                        id: 9
                      level: 40
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/16177.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/16177-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/16177-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/16177-800.png"
                    - ankama_id: 8629
                      name: Hat Tsokey
                      type:
                        name: Hat
                      level: 40
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/16179.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/16179-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/16179-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/16179-800.png"
        "400":
          description: |
            Bad Request

            Possibilities:
            - empty or no query
        "404":
          description: |-
            Not Found

            Possibilities:
            - no hits for query
      operationId: get-items-equipment-search
      description: Search in all names and descriptions of equipment items with a query.
      parameters:
        - schema:
            type: string
            example: nidas
          in: query
          name: query
          description: case sensitive search query
          required: true
        - schema:
            type: string
            example: boots
          in: query
          description: only results with the translated type name
          name: "filter[type_name]"
        - schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            example: 150
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            format: int32
            example: 200
            minimum: 1
            maximum: 200
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            default: 8
            example: 8
            minimum: 1
            maximum: 100
          in: query
          name: limit
          description: maximum number of returned results
        - schema:
            type: array
            items:
              type: string
            example:
              - boots
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: 4lzcb55gkjj2z
  "/{game}/{language}/items/cosmetics/search":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Search Cosmetics
      tags:
        - cosmetics
      responses:
        "200":
          description: Cosmetics found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item-List-Entry"
              examples:
                query "fal":
                  value:
                    - ankama_id: 23711
                      name: Falcodove
                      type:
                        name: Ceremonial petsmount
                        id: 19
                      level: 1
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/121061.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/121061-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/121061-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/121061-800.png"
                    - ankama_id: 21400
                      name: Bone Falchion
                      type:
                        name: Ceremonial weapon
                      level: 1
                      image_urls:
                        icon: "https://api.dofusdu.de/dofus2/img/item/6741.png"
                        sd: "https://api.dofusdu.de/dofus2/img/item/6741-200.png"
                        hq: "https://api.dofusdu.de/dofus2/img/item/6741-400.png"
                        hd: "https://api.dofusdu.de/dofus2/img/item/6741-800.png"
        "400":
          description: |
            Bad Request

            Possibilities:
            - empty or no query
        "404":
          description: |-
            Not Found

            Possibilities:
            - no hits for query
      operationId: get-cosmetics-search
      description: Search in all names and descriptions of cosmetic items with a query.
      parameters:
        - schema:
            type: string
            example: nedora
          in: query
          name: query
          description: case sensitive search query
          required: true
        - schema:
            type: string
            example: Wings
          in: query
          description: only results with the translated type name
          name: "filter[type_name]"
        - schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            example: 1
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            example: 2
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            default: 8
            example: 8
            minimum: 1
            maximum: 100
          in: query
          name: limit
          description: maximum number of returned results
        - schema:
            type: array
            items:
              type: string
            example:
              - wings
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: mw8gyg65z17wf
  "/{game}/{language}/items/cosmetics/{ankama_id}":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: integer
          example: 24132
        name: ankama_id
        in: path
        required: true
        description: identifier
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Single Cosmetics
      tags:
        - cosmetics
      responses:
        "200":
          description: Cosmetic Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cosmetic"
              examples:
                Master Tor:
                  value:
                    ankama_id: 24132
                    name: Master Tor Toise's Shell
                    description: "Weighing at least 20 kilo-pods, this shell is used for muscle strengthening during Master Tor Toise's training sessions."
                    type:
                      name: Ceremonial cape
                      id: 18
                    level: 180
                    pods: 0
                    image_urls:
                      icon: "https://api.dofusdu.de/dofus2/img/item/17481.png"
                      sd: "https://api.dofusdu.de/dofus2/img/item/17481-200.png"
                      hq: "https://api.dofusdu.de/dofus2/img/item/17481-400.png"
                      hd: "https://api.dofusdu.de/dofus2/img/item/17481-800.png"
                    effects:
                      - int_minimum: 0
                        int_maximum: 0
                        type:
                          name: "Exchangeable:"
                          id: 0
                          is_meta: false
                          is_active: false
                        ignore_int_min: true
                        ignore_int_max: true
                        formatted: "Exchangeable: 0"
                      - int_minimum: 0
                        int_maximum: 0
                        type:
                          name: "Compatible with:"
                          id: 1
                          is_meta: false
                        ignore_int_min: true
                        ignore_int_max: true
                        formatted: "Compatible with: 0"
        "400":
          description: |
            Bad Request

            Possibilities:
            - invalid ankama id format
        "404":
          description: |-
            Not Found

            Possibilities:
            - nothing found for this ankama_id
      operationId: get-cosmetics-single
      description: Retrieve a specific cosmetic item with id.
      parameters: []
      x-internal: false
      x-stoplight:
        id: a0ks17l0zqqaj
  "/{game}/{language}/items/resources/{ankama_id}":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: integer
          example: 7295
        name: ankama_id
        in: path
        required: true
        description: identifier
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Single Resources
      tags:
        - resources
      responses:
        "200":
          description: Resource Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
              examples:
                Levadura de panadero:
                  value:
                    ankama_id: 286
                    name: Levadura de panadero
                    description: Es un ingrediente indispensable para la fermentación del pan.
                    type:
                      name: Polvo
                      id: 156
                    level: 1
                    pods: 1
                    image_urls:
                      icon: "https://api.dofusdu.de/dofus2/img/item/48137.png"
                      sd: "https://api.dofusdu.de/dofus2/img/item/48137-200.png"
                      hq: "https://api.dofusdu.de/dofus2/img/item/48137-400.png"
                      hd: "https://api.dofusdu.de/dofus2/img/item/48137-800.png"
                    recipe:
                      - item_ankama_id: 519
                        item_subtype: resources
                        quantity: 1
                      - item_ankama_id: 311
                        item_subtype: resources
                        quantity: 1
        "400":
          description: |
            Bad Request

            Possibilities:
            - invalid ankama id format
        "404":
          description: |-
            Not Found

            Possibilities:
            - nothing found for this ankama_id
      operationId: get-items-resources-single
      description: Retrieve a specific resource item with id.
      parameters: []
      x-stoplight:
        id: viqn5ujmwoi9s
  "/{game}/{language}/items/equipment/{ankama_id}":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: integer
          example: 26009
        name: ankama_id
        in: path
        required: true
        description: identifier
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Single Equipment
      tags:
        - equipment
      responses:
        "200":
          description: Equipment Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Weapon"
              examples:
                Weapon:
                  value:
                    ankama_id: 26011
                    name: Chaotic Scythe
                    description: |-
                      "Actual life was chaos, but there was something terribly logical in the imagination."

                      — Oskar Wyld
                    type:
                      name: Scythe
                      id: 163
                    is_weapon: true
                    level: 200
                    pods: 10
                    image_urls:
                      icon: "https://api.dofusdu.de/dofus2/img/item/22009.png"
                      sd: "https://api.dofusdu.de/dofus2/img/item/22009-200.png"
                      hq: "https://api.dofusdu.de/dofus2/img/item/22009-400.png"
                      hd: "https://api.dofusdu.de/dofus2/img/item/22009-800.png"
                    effects:
                      - int_minimum: 201
                        int_maximum: 300
                        type:
                          name: Initiative
                          id: 24
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 201 to 300 Initiative
                      - int_minimum: 301
                        int_maximum: 350
                        type:
                          name: Vitality
                          id: 9
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 301 to 350 Vitality
                      - int_minimum: 31
                        int_maximum: 40
                        type:
                          name: Intelligence
                          id: 13
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 31 to 40 Intelligence
                      - int_minimum: 31
                        int_maximum: 40
                        type:
                          name: Chance
                          id: 22
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 31 to 40 Chance
                      - int_minimum: 16
                        int_maximum: 20
                        type:
                          name: Power
                          id: 32
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 16 to 20 Power
                      - int_minimum: 26
                        int_maximum: 35
                        type:
                          name: Wisdom
                          id: 10
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 26 to 35 Wisdom
                      - int_minimum: 9
                        int_maximum: 12
                        type:
                          name: Lock
                          id: 26
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 9 to 12 Lock
                      - int_minimum: 14
                        int_maximum: 18
                        type:
                          name: Fire Damage
                          id: 61
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 14 to 18 Fire Damage
                      - int_minimum: 14
                        int_maximum: 18
                        type:
                          name: Water Damage
                          id: 27
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 14 to 18 Water Damage
                      - int_minimum: 7
                        int_maximum: 10
                        type:
                          name: "% Water Resistance"
                          id: 17
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 7 to 10% Water Resistance
                      - int_minimum: 9
                        int_maximum: 12
                        type:
                          name: Heals
                          id: 11
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 9 to 12 Heals
                      - int_minimum: -15
                        int_maximum: 0
                        type:
                          name: Critical Damage
                          id: 38
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: true
                        formatted: "-15 Critical Damage"
                      - int_minimum: -1
                        int_maximum: 0
                        type:
                          name: Range
                          id: 31
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: true
                        formatted: "-1 Range"
                      - int_minimum: 1
                        int_maximum: 0
                        type:
                          name: MP
                          id: 8
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: true
                        formatted: 1 MP
                      - int_minimum: 21
                        int_maximum: 25
                        type:
                          name: (Neutral damage)
                          id: 168
                          is_meta: false
                          is_active: true
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 21 to 25 (Neutral damage)
                      - int_minimum: 16
                        int_maximum: 20
                        type:
                          name: (Fire steal)
                          id: 174
                          is_meta: false
                          is_active: true
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 16 to 20 (Fire steal)
                      - int_minimum: 16
                        int_maximum: 20
                        type:
                          name: (Water steal)
                          id: 175
                          is_meta: false
                          is_active: true
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 16 to 20 (Water steal)
                    conditions:
                      - operator: <
                        int_value: 12
                        element:
                          name: AP
                          id: 12
                    condition_tree:
                      condition:
                        operator: <
                        int_value: 12
                        element:
                          name: AP
                          id: 12
                      is_operand: true
                    critical_hit_probability: 10
                    critical_hit_bonus: 3
                    is_two_handed: false
                    max_cast_per_turn: 1
                    ap_cost: 5
                    range:
                      min: 1
                      max: 2
                    recipe:
                      - item_ankama_id: 26033
                        item_subtype: resources
                        quantity: 71
                      - item_ankama_id: 26035
                        item_subtype: resources
                        quantity: 16
                      - item_ankama_id: 26036
                        item_subtype: resources
                        quantity: 7
                      - item_ankama_id: 25181
                        item_subtype: resources
                        quantity: 4
                      - item_ankama_id: 22204
                        item_subtype: resources
                        quantity: 4
                      - item_ankama_id: 26037
                        item_subtype: resources
                        quantity: 2
                      - item_ankama_id: 12728
                        item_subtype: resources
                        quantity: 2
                      - item_ankama_id: 24144
                        item_subtype: resources
                        quantity: 2
                Equipment:
                  value:
                    ankama_id: 14076
                    name: Count Harebourg's Hat
                    description: "Count Harebourg was forced to become a recluse after the big freeze, but even back then, no living soul had ever seen his face. What is he hiding behind this hat, and what transformations has that face undergone after all these years?"
                    type:
                      name: Hat
                      id: 27
                    is_weapon: false
                    level: 200
                    pods: 10
                    image_urls:
                      icon: "https://api.dofusdu.de/dofus2/img/item/16362.png"
                      sd: "https://api.dofusdu.de/dofus2/img/item/16362-200.png"
                      hq: "https://api.dofusdu.de/dofus2/img/item/16362-400.png"
                      hd: "https://api.dofusdu.de/dofus2/img/item/16362-800.png"
                    effects:
                      - int_minimum: 451
                        int_maximum: 500
                        type:
                          name: Vitality
                          id: 9
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 451 to 500 Vitality
                      - int_minimum: 71
                        int_maximum: 100
                        type:
                          name: Strength
                          id: 45
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 71 to 100 Strength
                      - int_minimum: 41
                        int_maximum: 60
                        type:
                          name: Wisdom
                          id: 10
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 41 to 60 Wisdom
                      - int_minimum: 1
                        int_maximum: 0
                        type:
                          name: Range
                          id: 31
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: true
                        formatted: 1 Range
                      - int_minimum: 21
                        int_maximum: 30
                        type:
                          name: Prospecting
                          id: 25
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 21 to 30 Prospecting
                      - int_minimum: 16
                        int_maximum: 20
                        type:
                          name: Neutral Damage
                          id: 49
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 16 to 20 Neutral Damage
                      - int_minimum: 16
                        int_maximum: 20
                        type:
                          name: Earth Damage
                          id: 48
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 16 to 20 Earth Damage
                      - int_minimum: -4
                        int_maximum: -5
                        type:
                          name: "% Neutral Resistance"
                          id: 34
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: "-4 to -5% Neutral Resistance"
                      - int_minimum: -4
                        int_maximum: -5
                        type:
                          name: "% Earth Resistance"
                          id: 63
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: "-4 to -5% Earth Resistance"
                      - int_minimum: -4
                        int_maximum: -5
                        type:
                          name: "% Fire Resistance"
                          id: 37
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: "-4 to -5% Fire Resistance"
                      - int_minimum: -4
                        int_maximum: -5
                        type:
                          name: "% Water Resistance"
                          id: 17
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: "-4 to -5% Water Resistance"
                      - int_minimum: -4
                        int_maximum: -5
                        type:
                          name: "% Air Resistance"
                          id: 16
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: "-4 to -5% Air Resistance"
                      - int_minimum: 6
                        int_maximum: 8
                        type:
                          name: AP Reduction
                          id: 64
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 6 to 8 AP Reduction
                      - int_minimum: 16
                        int_maximum: 20
                        type:
                          name: Lock
                          id: 26
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 16 to 20 Lock
                    recipe:
                      - item_ankama_id: 13990
                        item_subtype: resources
                        quantity: 30
                      - item_ankama_id: 13993
                        item_subtype: resources
                        quantity: 4
                      - item_ankama_id: 13914
                        item_subtype: resources
                        quantity: 5
                      - item_ankama_id: 13995
                        item_subtype: resources
                        quantity: 1
                      - item_ankama_id: 13982
                        item_subtype: resources
                        quantity: 4
                      - item_ankama_id: 13168
                        item_subtype: resources
                        quantity: 5
                      - item_ankama_id: 14145
                        item_subtype: resources
                        quantity: 1
                      - item_ankama_id: 12740
                        item_subtype: resources
                        quantity: 3
                    parent_set:
                      id: 270
                      name: Count Harebourg Set
        "400":
          description: |
            Bad Request

            Possibilities:
            - invalid ankama id format
        "404":
          description: |-
            Not Found

            Possibilities:
            - nothing found for this ankama_id
      operationId: get-items-equipment-single
      description: Retrieve a specific equipment item with id.
      parameters: []
      x-stoplight:
        id: e2j6pr8n8112g
  "/{game}/{language}/items/consumables/{ankama_id}":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: integer
          example: 17206
        name: ankama_id
        in: path
        required: true
        description: identifier
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Single Consumables
      tags:
        - consumables
      responses:
        "200":
          description: Consumable Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
              examples:
                Superior Health Flask:
                  value:
                    ankama_id: 282
                    name: Superior Health Flask
                    description: This flask restores some Health Points.
                    type:
                      name: Potion
                      id: 96
                    level: 60
                    pods: 2
                    image_urls:
                      icon: "https://api.dofusdu.de/dofus2/img/item/12039.png"
                      sd: "https://api.dofusdu.de/dofus2/img/item/12039-200.png"
                      hq: "https://api.dofusdu.de/dofus2/img/item/12039-400.png"
                      hd: "https://api.dofusdu.de/dofus2/img/item/12039-800.png"
                    effects:
                      - int_minimum: 70
                        int_maximum: 0
                        type:
                          name: HP
                          id: 21
                          is_meta: false
                          is_active: true
                        ignore_int_min: false
                        ignore_int_max: true
                        formatted: 70 HP
                    recipe:
                      - item_ankama_id: 380
                        item_subtype: resources
                        quantity: 5
                      - item_ankama_id: 1731
                        item_subtype: resources
                        quantity: 1
                      - item_ankama_id: 533
                        item_subtype: resources
                        quantity: 1
        "400":
          description: |
            Bad Request

            Possibilities:
            - invalid ankama id format
        "404":
          description: |-
            Not Found

            Possibilities:
            - nothing found for this ankama_id
      operationId: get-items-consumables-single
      description: Retrieve a specific consumable item with id.
      parameters: []
      x-stoplight:
        id: n40tefsprc7oq
  "/{game}/{language}/items/quest/{ankama_id}":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: integer
          example: 25256
        name: ankama_id
        in: path
        required: true
        description: identifier
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Single Quest Items
      responses:
        "200":
          description: Quest Item Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
              examples:
                Modulo di Rapporto Vergine:
                  value:
                    ankama_id: 2105
                    name: Modulo di Rapporto Vergine
                    description: |-
                      Modulo di rapporto vergine.
                      Pronto per essere riempito da Welloy Cab
                    type:
                      name: Varie
                      id: 110
                    level: 1
                    pods: 0
                    image_urls:
                      icon: "https://api.dofusdu.de/dofus2/img/item/24041.png"
                      sd: "https://api.dofusdu.de/dofus2/img/item/24041-200.png"
                      hq: "https://api.dofusdu.de/dofus2/img/item/24041-400.png"
                      hd: "https://api.dofusdu.de/dofus2/img/item/24041-800.png"
        "400":
          description: |
            Bad Request

            Possibilities:
            - invalid ankama id format
        "404":
          description: |-
            Not Found

            Possibilities:
            - nothing found for this ankama_id
      operationId: get-item-quest-single
      description: Retrieve a specific quest item with id.
      parameters: []
      tags:
        - quest items
      x-stoplight:
        id: 74dxhpw46pxzc
  "/{game}/{language}/mounts/{ankama_id}":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: integer
          example: 180
        name: ankama_id
        in: path
        required: true
        description: identifier
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Single Mounts
      tags:
        - mounts
      responses:
        "200":
          description: Mount Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mount"
              examples:
                Dragoperu amêndoa e dourado:
                  value:
                    ankama_id: 33
                    name: Dragoperu amêndoa e dourado
                    family_name: Dragoperu
                    image_urls:
                      icon: "https://api.dofusdu.de/dofus2/img/mount/33.png"
                      sd: "https://api.dofusdu.de/dofus2/img/mount/33-200.png"
                      hq: "https://api.dofusdu.de/dofus2/img/mount/33-400.png"
                      hd: "https://api.dofusdu.de/dofus2/img/mount/33-800.png"
                    effects:
                      - int_minimum: 0
                        int_maximum: 300
                        type:
                          name: Vitalidade
                          id: 9
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 0 a 300 Vitalidade
                      - int_minimum: 0
                        int_maximum: 1
                        type:
                          name: invocaç
                          id: 28
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 0 a 1 invocaç
                      - int_minimum: 0
                        int_maximum: 1000
                        type:
                          name: Iniciativa
                          id: 24
                          is_meta: false
                          is_active: false
                        ignore_int_min: false
                        ignore_int_max: false
                        formatted: 0 a 1000 Iniciativa
        "400":
          description: |
            Bad Request

            Possibilities:
            - invalid ankama id format
        "404":
          description: |-
            Not Found

            Possibilities:
            - nothing found for this ankama_id
      operationId: get-mounts-single
      description: Retrieve a specific mount with id.
      parameters: []
      x-stoplight:
        id: pzqoy2btp2qkn
  "/{game}/{language}/sets/{ankama_id}":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: integer
          example: 499
        name: ankama_id
        in: path
        required: true
        description: identifier
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: Single Sets
      tags:
        - sets
      responses:
        "200":
          description: Set Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Equipment-Set"
              examples:
                Atcham:
                  value:
                    ankama_id: 406
                    name: Atcham-Set
                    equipment_ids:
                      - 17584
                      - 17585
                      - 17586
                    effects:
                      - - int_minimum: 30
                          int_maximum: 0
                          type:
                            name: Intelligenz
                            id: 13
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 30 Intelligenz
                          item_combination: 2
                        - int_minimum: 30
                          int_maximum: 0
                          type:
                            name: Flinkheit
                            id: 36
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 30 Flinkheit
                          item_combination: 2
                        - int_minimum: 30
                          int_maximum: 0
                          type:
                            name: Glück
                            id: 22
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 30 Glück
                          item_combination: 2
                        - int_minimum: 5
                          int_maximum: 0
                          type:
                            name: AP-Entzug
                            id: 64
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 5 AP-Entzug
                          item_combination: 2
                        - int_minimum: 10
                          int_maximum: 0
                          type:
                            name: Kritischer Schaden
                            id: 38
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 10 Kritischer Schaden
                          item_combination: 2
                      - - int_minimum: 30
                          int_maximum: 0
                          type:
                            name: Intelligenz
                            id: 13
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 30 Intelligenz
                          item_combination: 3
                        - int_minimum: 30
                          int_maximum: 0
                          type:
                            name: Flinkheit
                            id: 36
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 30 Flinkheit
                          item_combination: 3
                        - int_minimum: 30
                          int_maximum: 0
                          type:
                            name: Glück
                            id: 22
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 30 Glück
                          item_combination: 3
                        - int_minimum: 5
                          int_maximum: 0
                          type:
                            name: AP-Entzug
                            id: 64
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 5 AP-Entzug
                          item_combination: 3
                        - int_minimum: 10
                          int_maximum: 0
                          type:
                            name: Kritischer Schaden
                            id: 38
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 10 Kritischer Schaden
                          item_combination: 3
                        - int_minimum: 1
                          int_maximum: 0
                          type:
                            name: AP
                            id: 12
                            is_meta: false
                            is_active: false
                          ignore_int_min: false
                          ignore_int_max: true
                          formatted: 1 AP
                          item_combination: 3
                    highest_equipment_level: 200
        "400":
          description: |
            Bad Request

            Possibilities:
            - invalid ankama id format
        "404":
          description: Not Found
      operationId: get-sets-single
      description: Retrieve a specific set with id.
      parameters: []
      x-stoplight:
        id: 7h3o04n689qab
  "/{game}/{language}/sets":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List Sets
      tags:
        - sets
      responses:
        "200":
          description: Set Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sets-List-Paged"
              examples:
                'filter[min_highest_equipment_level] >= 150, sort[level] "desc"':
                  value:
                    _links:
                      first: "https://api.dofusdu.de/dofus2/fr/sets/?page%5Bnumber%5D%3D1%26page%5Bsize%5D%3D16"
                      prev: ""
                      next: "https://api.dofusdu.de/dofus2/fr/sets/?page%5Bnumber%5D%3D2%26page%5Bsize%5D%3D16"
                      last: "https://api.dofusdu.de/dofus2/fr/sets/?page%5Bnumber%5D%3D11%26page%5Bsize%5D%3D16"
                    sets:
                      - ankama_id: 406
                        name: Panoplie d'Atcham
                        items: 3
                        level: 200
                      - ankama_id: 460
                        name: Panoplie Volkorne
                        items: 4
                        level: 200
                      - ankama_id: 499
                        name: Reliques de l'Aurore Pourpre
                        items: 6
                        level: 200
                      - ankama_id: 498
                        name: Panoplie des Ravageurs
                        items: 3
                        level: 200
                      - ankama_id: 496
                        name: Panoplie du Pandamonium
                        items: 3
                        level: 200
                      - ankama_id: 495
                        name: Panoplie Possédée
                        items: 3
                        level: 200
                      - ankama_id: 491
                        name: Panoplie de Wulan
                        items: 3
                        level: 200
                      - ankama_id: 489
                        name: Panoplie du Wukang
                        items: 3
                        level: 200
                      - ankama_id: 488
                        name: Panoplie du Wukin
                        items: 3
                        level: 200
                      - ankama_id: 477
                        name: Panoplie de Corruption
                        items: 3
                        level: 200
                      - ankama_id: 476
                        name: Panoplie de Servitude
                        items: 3
                        level: 200
                      - ankama_id: 475
                        name: Panoplie de Guerre
                        items: 3
                        level: 200
                      - ankama_id: 474
                        name: Panoplie de Misère
                        items: 3
                        level: 200
                      - ankama_id: 472
                        name: Panoplie de Torkélonia
                        items: 3
                        level: 200
                      - ankama_id: 471
                        name: Panoplie Lunaire
                        items: 3
                        level: 200
                      - ankama_id: 343
                        name: Panoplie de Gein
                        items: 3
                        level: 200
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-sets-list
      description: Retrieve a list of sets.
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: asc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: integer
            minimum: 1
            format: int32
            maximum: 200
            example: 190
          in: query
          name: "filter[min_highest_equipment_level]"
          description: only results where the equipment with the highest level is above or equal to this value
        - schema:
            type: integer
            minimum: 1
            maximum: 200
            example: 200
            format: int32
          in: query
          name: "filter[max_highest_equipment_level]"
          description: only results where the equipment with the highest level is below or equal to this value
        - schema:
            type: integer
            minimum: -1
            example: 20
            format: int32
          in: query
          name: "page[size]"
          description: size of the results from the list. -1 disables pagination and gets all in one response.
        - schema:
            type: integer
            format: int32
            minimum: 0
            example: 1
          in: query
          name: "page[number]"
          description: "page number based on the current page[size]. So you could get page 1 with 8 entrys and page 2 would have entries 8 to 16."
        - schema:
            type: array
            uniqueItems: true
            example:
              - equipment_ids
            items:
              type: string
              enum:
                - effects
                - equipment_ids
          in: query
          name: "fields[set]"
          description: adds fields from their detail endpoint to the item list entries. Multiple comma separated values allowed.
          explode: false
        - schema:
            type: boolean
          in: query
          name: "filter[is_cosmetic]"
          description: "filter sets based on if they only got cosmetic items in it. If true, the item ids are for the cosmetic endpoints instead of equipment."
      x-stoplight:
        id: s3zlet293u7sh
  "/{game}/{language}/mounts":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List Mounts
      tags:
        - mounts
      responses:
        "200":
          description: Mounts Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mounts-List-Paged"
              examples:
                "page[size] 3":
                  value:
                    _links:
                      first: "https://api.dofusdu.de/dofus2/es/mounts/?page%5Bnumber%5D%3D1%26page%5Bsize%5D%3D3"
                      prev: ""
                      next: "https://api.dofusdu.de/dofus2/es/mounts/?page%5Bnumber%5D%3D2%26page%5Bsize%5D%3D3"
                      last: "https://api.dofusdu.de/dofus2/es/mounts/?page%5Bnumber%5D%3D89%26page%5Bsize%5D%3D3"
                    mounts:
                      - ankama_id: 1
                        name: Dragopavo almendrado salvaje
                        family_name: Dragopavo
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/mount/1.png"
                          sd: "https://api.dofusdu.de/dofus2/img/mount/1-200.png"
                          hq: "https://api.dofusdu.de/dofus2/img/mount/1-400.png"
                          hd: "https://api.dofusdu.de/dofus2/img/mount/1-800.png"
                      - ankama_id: 3
                        name: Dragopavo ébano
                        family_name: Dragopavo
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/mount/3.png"
                          sd: "https://api.dofusdu.de/dofus2/img/mount/3-200.png"
                          hq: "https://api.dofusdu.de/dofus2/img/mount/3-400.png"
                          hd: "https://api.dofusdu.de/dofus2/img/mount/3-800.png"
                      - ankama_id: 6
                        name: Dragopavo pelirrojo salvaje
                        family_name: Dragopavo
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/mount/6.png"
                          sd: "https://api.dofusdu.de/dofus2/img/mount/6-200.png"
                          hq: "https://api.dofusdu.de/dofus2/img/mount/6-400.png"
                          hd: "https://api.dofusdu.de/dofus2/img/mount/6-800.png"
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-mounts-list
      description: Retrieve a list of mounts.
      parameters:
        - schema:
            type: string
            example: Dragoturkey
          in: query
          name: "filter[family_name]"
          description: only results with the translated family name
        - schema:
            type: integer
            minimum: -1
            example: 10
          in: query
          name: "page[size]"
          description: size of the results from the list. -1 disables pagination and gets all in one response.
        - schema:
            type: integer
            minimum: 0
            example: 1
          in: query
          name: "page[number]"
          description: "page number based on the current page[size]. So you could get page 1 with 8 entrys and page 2 would have entries 8 to 16."
        - schema:
            type: array
            uniqueItems: true
            example:
              - effects
            items:
              type: string
              enum:
                - effects
          in: query
          name: "fields[mount]"
          explode: false
          description: adds fields from their detail endpoint to the item list entries. Multiple comma separated values allowed.
      x-stoplight:
        id: gy9ldukmg67hy
  "/{game}/{language}/items/equipment":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
          example: en
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List Equipment
      responses:
        "200":
          description: Equipment Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                "page[size] 3, sort[level] desc":
                  value:
                    _links:
                      first: "https://api.dofusdu.de/dofus2/es/items/equipment?page%5Bnumber%5D%3D1%26page%5Bsize%5D%3D3"
                      prev: null
                      next: "https://api.dofusdu.de/dofus2/es/items/equipment?page%5Bnumber%5D%3D2%26page%5Bsize%5D%3D3"
                      last: "https://api.dofusdu.de/dofus2/es/items/equipment?page%5Bnumber%5D%3D1241%26page%5Bsize%5D%3D3"
                    items:
                      - ankama_id: 19244
                        name: Amuleto del Corazón Sangriento
                        type:
                          name: Amuleto
                          id: 18
                        level: 200
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/1299.png"
                          sd: "https://api.dofusdu.de/dofus2/img/item/1299-200.png"
                          hq: "https://api.dofusdu.de/dofus2/img/item/1299-400.png"
                          hd: "https://api.dofusdu.de/dofus2/img/item/1299-800.png"
                      - ankama_id: 15696
                        name: Capachalote
                        type:
                          name: Capa
                          id: 72
                        level: 200
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/17331.png"
                          sd: "https://api.dofusdu.de/dofus2/img/item/17331-200.png"
                          hq: "https://api.dofusdu.de/dofus2/img/item/17331-400.png"
                          hd: "https://api.dofusdu.de/dofus2/img/item/17331-800.png"
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-items-equipment-list
      description: Retrieve a list of equipment items.
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: desc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: Sword
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            example: 10
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            minimum: 0
            example: 60
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            minimum: -1
            example: 5
          in: query
          name: "page[size]"
          description: size of the results from the list. -1 disables pagination and gets all in one response.
        - schema:
            type: integer
            minimum: 0
            example: 1
          in: query
          name: "page[number]"
          description: "page number based on the current page[size]. So you could get page 1 with 8 entrys and page 2 would have entries 8 to 16."
        - schema:
            type: array
            uniqueItems: true
            example:
              - is_weapon
            items:
              type: string
              enum:
                - recipe
                - description
                - conditions
                - effects
                - is_weapon
                - pods
                - parent_set
                - critical_hit_probability
                - critical_hit_bonus
                - is_two_handed
                - max_cast_per_turn
                - ap_cost
                - range
          explode: false
          in: query
          name: "fields[item]"
          description: adds fields from their detail endpoint to the item list entries. Multiple comma separated values allowed.
        - schema:
            type: array
            items:
              type: string
            example:
              - sword
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      tags:
        - equipment
      x-stoplight:
        id: z7ihi4fuba4rk
  "/{game}/{language}/items/resources":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List Resources
      tags:
        - resources
      responses:
        "200":
          description: Resources Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                "page[size] 2":
                  value:
                    _links:
                      first: "https://api.dofusdu.de/dofus2/de/items/resources?page%5Bnumber%5D%3D1%26page%5Bsize%5D%3D2"
                      prev: null
                      next: "https://api.dofusdu.de/dofus2/de/items/resources?page%5Bnumber%5D%3D2%26page%5Bsize%5D%3D2"
                      last: "https://api.dofusdu.de/dofus2/de/items/resources?page%5Bnumber%5D%3D1534%26page%5Bsize%5D%3D2"
                    items:
                      - ankama_id: 274
                        name: Stück des Klauenpuzzles
                        type:
                          name: Rohstein
                          id: 92
                        level: 43
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/51267.png"
                      - ankama_id: 276
                        name: Münze des Schatzes von Badoul
                        type:
                          name: Verschiedene Ressourcen
                          id: 1
                        level: 43
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/15268.png"
        "400":
          description: Bad Request
        "404":
          description: Not Found
      operationId: get-items-resources-list
      description: Retrieve a list of resource items.
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: desc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: miscellaneous resources
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            example: 160
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            example: 190
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            minimum: -1
            example: 10
          in: query
          name: "page[size]"
          description: size of the results from the list. -1 disables pagination and gets all in one response.
        - schema:
            type: integer
            minimum: 0
            example: 1
          in: query
          name: "page[number]"
          description: "page number based on the current page[size]. So you could get page 1 with 8 entrys and page 2 would have entries 8 to 16."
        - schema:
            type: array
            uniqueItems: true
            example:
              - recipe
            items:
              type: string
              enum:
                - recipe
                - description
                - conditions
                - effects
          explode: false
          in: query
          name: "fields[item]"
          description: adds fields from their detail endpoint to the item list entries. Multiple comma separated values allowed.
        - schema:
            type: array
            items:
              type: string
            example:
              - wood
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: z2jx5o5pjumhs
  "/{game}/{language}/items/consumables":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List Consumables
      tags:
        - consumables
      responses:
        "200":
          description: Consumables Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                "No query, just defaults":
                  value:
                    _links:
                      first: "https://api.dofusdu.de/dofus2/en/items/consumables?page%5Bnumber%5D%3D1%26page%5Bsize%5D%3D16"
                      prev: null
                      next: "https://api.dofusdu.de/dofus2/en/items/consumables?page%5Bnumber%5D%3D2%26page%5Bsize%5D%3D16"
                      last: "https://api.dofusdu.de/dofus2/en/items/consumables?page%5Bnumber%5D%3D213%26page%5Bsize%5D%3D16"
                    items:
                      - ankama_id: 281
                        name: Api
                        type:
                          name: Treat
                          id: 6
                        level: 1
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/42001.png"
                      - ankama_id: 282
                        name: Superior Health Flask
                        type:
                          name: Potion
                          id: 42
                        level: 60
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/12039.png"
                      - ankama_id: 283
                        name: Health Flask
                        type:
                          name: Potion
                          id: 42
                        level: 40
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/12003.png"
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-items-consumables-list
      description: Retrieve a list of consumable items.
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: asc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: Chest
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            example: 150
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            example: 180
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            minimum: -1
            example: 2
          in: query
          name: "page[size]"
          description: size of the results from the list. -1 disables pagination and gets all in one response.
        - schema:
            type: integer
            minimum: 0
            example: 1
          in: query
          name: "page[number]"
          description: "page number based on the current page[size]. So you could get page 1 with 8 entrys and page 2 would have entries 8 to 16."
        - schema:
            type: array
            uniqueItems: true
            example:
              - recipe
            items:
              type: string
              enum:
                - recipe
                - description
                - conditions
                - effects
          explode: false
          in: query
          description: adds fields from their detail endpoint to the item list entries. Multiple comma separated values allowed.
          name: "fields[item]"
        - schema:
            type: array
            items:
              type: string
            example:
              - chest
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: g2xcp6fribgyf
  "/{game}/{language}/items/quest":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
          example: fr
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List Quest Items
      tags:
        - quest items
      responses:
        "200":
          description: Quest Items Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                "sort[level] asc, page[number] 5, page[size] 2":
                  value:
                    _links:
                      first: "https://api.dofusdu.de/dofus2/de/items/quest?page%5Bnumber%5D%3D1%26page%5Bsize%5D%3D2"
                      prev: "https://api.dofusdu.de/dofus2/de/items/quest?page%5Bnumber%5D%3D4%26page%5Bsize%5D%3D2"
                      next: "https://api.dofusdu.de/dofus2/de/items/quest?page%5Bnumber%5D%3D6%26page%5Bsize%5D%3D2"
                      last: "https://api.dofusdu.de/dofus2/de/items/quest?page%5Bnumber%5D%3D1454%26page%5Bsize%5D%3D2"
                    items:
                      - ankama_id: 7349
                        name: Liebesbrief für Poochan
                        type:
                          name: Pandala
                          id: 4
                        level: 0
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/24050.png"
                      - ankama_id: 7348
                        name: Feudala-Dojo-Siegerurkunde
                        type:
                          name: Pandala
                          id: 4
                        level: 0
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/24255.png"
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-items-quest-list
      description: Retrieve a list of quest items.
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: desc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: Sufokia
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            example: 1
            format: int32
            minimum: 0
            maximum: 200
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            example: 50
            minimum: 0
            maximum: 200
            format: int32
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            minimum: -1
            example: 5
          in: query
          name: "page[size]"
          description: size of the results from the list. -1 disables pagination and gets all in one response.
        - schema:
            type: integer
            minimum: 0
            example: 1
          in: query
          description: "page number based on the current page[size]. So you could get page 1 with 8 entrys and page 2 would have entries 8 to 16."
          name: "page[number]"
        - schema:
            type: array
            uniqueItems: true
            example:
              - recipe
            items:
              type: string
              enum:
                - recipe
                - description
                - conditions
                - effects
          explode: false
          in: query
          description: adds fields from their detail endpoint to the item list entries. Multiple comma separated values allowed.
          name: "fields[item]"
        - schema:
            type: array
            items:
              type: string
            example:
              - sufokia
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: qsq51akecj0r0
  "/{game}/{language}/items/cosmetics":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
          example: fr
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List Cosmetics
      tags:
        - cosmetics
      responses:
        "200":
          description: Cosmetics Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                "page[size] 2":
                  value:
                    _links:
                      first: "https://api.dofusdu.de/dofus2/fr/items/cosmetics?page%5Bnumber%5D%3D1%26page%5Bsize%5D%3D2"
                      prev: null
                      next: "https://api.dofusdu.de/dofus2/fr/items/cosmetics?page%5Bnumber%5D%3D2%26page%5Bsize%5D%3D2"
                      last: "https://api.dofusdu.de/dofus2/fr/items/cosmetics?page%5Bnumber%5D%3D704%26page%5Bsize%5D%3D2"
                    items:
                      - ankama_id: 1090
                        name: Astrocoiffe
                        type:
                          name: Chapeau d'apparat
                          id: 11
                        level: 1
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/16027.png"
                      - ankama_id: 1907
                        name: Oreilles de Lapineupe
                        type:
                          name: Chapeau d'apparat
                          id: 11
                        level: 1
                        image_urls:
                          icon: "https://api.dofusdu.de/dofus2/img/item/16030.png"
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-cosmetics-list
      description: Retrieve a list of cosmetic items.
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: asc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: Chapeau d'apparat
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            example: 1
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            example: 5
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: integer
            minimum: -1
            example: 5
          in: query
          name: "page[size]"
          description: size of the results from the list. -1 disables pagination and gets all in one response.
        - schema:
            type: integer
            minimum: 0
            example: 1
          in: query
          name: "page[number]"
          description: "page number based on the current page[size]. So you could get page 1 with 8 entrys and page 2 would have entries 8 to 16."
        - schema:
            type: array
            uniqueItems: true
            example:
              - recipe
            items:
              type: string
              enum:
                - recipe
                - description
                - conditions
                - effects
          explode: false
          in: query
          description: adds fields from their detail endpoint to the item list entries. Multiple comma separated values allowed.
          name: "fields[item]"
        - schema:
            type: array
            items:
              type: string
            example:
              - ceremonial-hat
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: mlmwp9s8utn2j
  "/{game}/{language}/mounts/all":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List All Mounts
      tags:
        - mounts
      responses:
        "200":
          description: Mounts Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mounts-List-Paged"
              examples:
                defaults:
                  value:
                    _links:
                      first: null
                      prev: null
                      next: null
                      last: null
                    items:
                      - ankama_id: 0
                        name: string
                        family_name: string
                        image_urls:
                          icon: string
                          sd: string
                          hq: string
                          hd: string
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-all-mounts-list
      description: |-
        Retrieve all mounts with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      parameters:
        - schema:
            type: string
            example: Dragoturkey
          in: query
          name: "filter[family_name]"
          description: only results with the translated family name
        - schema:
            type: string
            enum:
              - gzip
          in: header
          name: Accept-Encoding
          description: optional compression for saving bandwidth
      x-stoplight:
        id: 35hwizajcz3g7
  "/{game}/{language}/sets/all":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List All Sets
      tags:
        - sets
      responses:
        "200":
          description: Set Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sets-List-Paged"
              examples:
                defaults:
                  value:
                    _links:
                      first: null
                      prev: null
                      next: null
                      last: null
                    sets:
                      - ankama_id: 0
                        name: string
                        items: 0
                        level: 0
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-all-sets-list
      description: |-
        Retrieve all sets with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: asc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: integer
            minimum: 1
            format: int32
            maximum: 200
            example: 190
          in: query
          name: "filter[min_highest_equipment_level]"
          description: only results where the equipment with the highest level is above or equal to this value
        - schema:
            type: integer
            minimum: 1
            maximum: 200
            example: 200
            format: int32
          in: query
          name: "filter[max_highest_equipment_level]"
          description: only results where the equipment with the highest level is below or equal to this value
        - schema:
            type: string
            enum:
              - gzip
          in: header
          name: Accept-Encoding
          description: optional compression for saving bandwidth
        - schema:
            type: boolean
          in: query
          description: "filter sets based on if they only got cosmetic items in it. If true, the item ids are for the cosmetic endpoints instead of equipment."
          name: "filter[is_cosmetic]"
      x-stoplight:
        id: rzxp5sotapqe6
  "/{game}/{language}/items/cosmetics/all":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
          example: fr
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List All Cosmetics
      tags:
        - cosmetics
      responses:
        "200":
          description: Cosmetics Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                defaults:
                  value:
                    _links:
                      first: null
                      prev: null
                      next: null
                      last: null
                    items:
                      - ankama_id: 0
                        name: string
                        type:
                          name: string
                        level: 0
                        image_urls:
                          icon: string
                          sd: string
                          hq: string
                          hd: string
                        recipe:
                          - item_ankama_id: 0
                            item_subtype: string
                            quantity: 0
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-all-cosmetics-list
      description: |-
        Retrieve all cosmetic items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: asc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: Chapeau d'apparat
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            example: 1
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            example: 5
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: string
            enum:
              - gzip
          in: header
          name: Accept-Encoding
          description: optional compression for saving bandwidth
        - schema:
            type: array
            items:
              type: string
            example:
              - boots
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: 07si7hjof1qpt
  "/{game}/{language}/items/quest/all":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
          example: fr
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List All Quest Items
      tags:
        - quest items
      responses:
        "200":
          description: Quest Items Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                defaults:
                  value:
                    _links:
                      first: null
                      prev: null
                      next: null
                      last: null
                    items:
                      - ankama_id: 0
                        name: string
                        type:
                          name: string
                        level: 0
                        image_urls:
                          icon: string
                          sd: string
                          hq: string
                          hd: string
                        recipe:
                          - item_ankama_id: 0
                            item_subtype: string
                            quantity: 0
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-all-items-quest-list
      description: |-
        Retrieve all quest items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: desc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: Sufokia
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            example: 1
            format: int32
            minimum: 0
            maximum: 200
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            example: 50
            minimum: 0
            maximum: 200
            format: int32
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: string
            enum:
              - gzip
          in: header
          name: Accept-Encoding
          description: optional compression for saving bandwidth
        - schema:
            type: array
            items:
              type: string
            example:
              - boots
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: mgmt97sgtrhja
  "/{game}/{language}/items/consumables/all":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List All Consumables
      tags:
        - consumables
      responses:
        "200":
          description: Consumables Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                defaults:
                  value:
                    _links:
                      first: null
                      prev: null
                      next: null
                      last: null
                    items:
                      - ankama_id: 0
                        name: string
                        type:
                          name: string
                        level: 0
                        image_urls:
                          icon: string
                          sd: string
                          hq: string
                          hd: string
                        recipe:
                          - item_ankama_id: 0
                            item_subtype: string
                            quantity: 0
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-all-items-consumables-list
      description: |-
        Retrieve all consumable items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: asc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: Chest
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            example: 150
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            example: 180
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: string
            enum:
              - gzip
          in: header
          name: Accept-Encoding
          description: optional compression for saving bandwidth
        - schema:
            type: array
            items:
              type: string
            example:
              - boots
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: llcg4hmp9wucr
  "/{game}/{language}/items/resources/all":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List All Resources
      tags:
        - resources
      responses:
        "200":
          description: Resources Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                defaults:
                  value:
                    _links:
                      first: null
                      prev: null
                      next: null
                      last: null
                    items:
                      - ankama_id: 0
                        name: string
                        type:
                          name: string
                        level: 0
                        image_urls:
                          icon: string
                          sd: string
                          hq: string
                          hd: string
                        recipe:
                          - item_ankama_id: 0
                            item_subtype: string
                            quantity: 0
        "400":
          description: Bad Request
        "404":
          description: Not Found
      operationId: get-all-items-resources-list
      description: |-
        Retrieve all resource items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: desc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: miscellaneous resources
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            example: 160
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            example: 190
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: string
            enum:
              - gzip
          in: header
          name: Accept-Encoding
          description: optional compression for saving bandwidth
        - schema:
            type: array
            items:
              type: string
            example:
              - boots
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      x-stoplight:
        id: 1wtcbwhh04jmq
  "/{game}/{language}/items/equipment/all":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
            - pt
          maxLength: 2
          minLength: 2
          example: en
        name: language
        in: path
        required: true
        description: a valid language code
      - schema:
          type: string
          enum:
            - dofus2
            - dofus2beta
          example: dofus2
        name: game
        in: path
        required: true
    get:
      summary: List All Equipment
      responses:
        "200":
          description: Equipment Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items-List-Paged"
              examples:
                defaults:
                  value:
                    _links:
                      first: null
                      prev: null
                      next: null
                      last: null
                    items:
                      - ankama_id: 0
                        name: string
                        type:
                          name: string
                        level: 0
                        image_urls:
                          icon: string
                          sd: string
                          hq: string
                          hd: string
                        recipe:
                          - item_ankama_id: 0
                            item_subtype: string
                            quantity: 0
        "400":
          description: |
            Bad Request
        "404":
          description: Not Found
      operationId: get-all-items-equipment-list
      description: |-
        Retrieve all equipment items with one request. This endpoint is just an alias for the a list with disabled pagination (page[size]=-1) and all fields[type] set.

        If you want everything unfiltered, delete the other query parameters.

        Be careful with testing or (god forbid) using /all in your browser, the returned json is huge and will slow down the browser!

        Tip: set the HTTP Header 'Accept-Encoding: gzip' for saving bandwidth. You will need to uncompress it on your end.
        Example with cURL:
        ```
        curl -sH 'Accept-Encoding: gzip' <api-endpoint> | gunzip -
        ```
      parameters:
        - schema:
            type: string
            enum:
              - asc
              - desc
            example: desc
          in: query
          name: "sort[level]"
          description: "sort the resulting list by level, default unsorted"
        - schema:
            type: string
            example: Sword
          in: query
          name: "filter[type_name]"
          description: only results with the translated type name
        - schema:
            type: integer
            example: 10
          in: query
          name: "filter[min_level]"
          description: only results which level is equal or above this value
        - schema:
            type: integer
            minimum: 0
            example: 60
          in: query
          name: "filter[max_level]"
          description: only results which level is equal or below this value
        - schema:
            type: string
            enum:
              - gzip
          in: header
          name: Accept-Encoding
          description: optional compression for saving bandwidth
        - schema:
            type: array
            items:
              type: string
            example:
              - boots
            uniqueItems: true
          in: query
          name: "filter[type_enum]"
          description: multi-filter results with the english type name. Add with "wood" or "+wood" and exclude with "-wood".
          explode: false
      tags:
        - equipment
      x-stoplight:
        id: wbxzhlcid1l0w
  "/dofus2/{language}/almanax":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
          example: fr
        name: language
        in: path
        required: true
        description: code
    get:
      summary: Almanax Range
      tags:
        - almanax
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Almanax-Entry"
              examples:
                "range[size] 2":
                  value:
                    - bonus:
                        description: "The experience points awarded for completing alignment quests and city order quests are increased by 100%. What's more, a special repeatable quest is available today inside the militias of Bonta and Brakmar. It is available to aligned players of level 20 or higher and is not attached to the offering quest."
                        type:
                          id: bonta-and-brakmar
                          name: Bonta and Brakmar
                      date: "2022-09-12"
                      tribute:
                        item:
                          ankama_id: 14284
                          image_urls:
                            hd: "https://api.dofusdu.de/dofus2/img/item/15247-800.png"
                            hq: "https://api.dofusdu.de/dofus2/img/item/15247-400.png"
                            icon: "https://api.dofusdu.de/dofus2/img/item/15247.png"
                            sd: "https://api.dofusdu.de/dofus2/img/item/15247-200.png"
                          name: Spectral Flame
                          subtype: resources
                        quantity: 2
                    - bonus:
                        description: The quantity of Flax harvested by farmers is increased by 125%.
                        type:
                          id: plenty-to-harvest
                          name: Plenty to harvest
                      date: "2022-09-13"
                      tribute:
                        item:
                          ankama_id: 423
                          image_urls:
                            hd: "https://api.dofusdu.de/dofus2/img/item/34122-800.png"
                            hq: "https://api.dofusdu.de/dofus2/img/item/34122-400.png"
                            icon: "https://api.dofusdu.de/dofus2/img/item/34122.png"
                            sd: "https://api.dofusdu.de/dofus2/img/item/34122-200.png"
                          name: Flax
                          subtype: resources
                        quantity: 20
      operationId: get-almanax-range
      description: |-
        Get a range of dates, defaults to today + 6 following days but can specified by the query parameters. 

        filter[bonus_type] can be used seperately and does not have an effect on the other parameters.

        range[from] changes the start date, everything else defaults to 6 following dates from this start date.

        range[to] when used without anything else, it will use today as start date and this parameter as end. All ranges are inclusive.

        range[from] + range[to] = inclusive range over the specified dates, should never be farther apart than 35 days.

        range[from|to] + range[size] no need to specify the date, just following days with [from] (0 is today) or go backwards in time with only [to] and [size].

        Not all combinations are listed but this should give you an idea how to they could work.
      parameters:
        - schema:
            type: string
            example: experience-points
          in: query
          name: "filter[bonus_type]"
          description: "ids from meta/{language}/almanax/bonuses"
        - schema:
            type: string
            example: "2016-09-15"
            format: date
          in: query
          name: "range[from]"
          description: yyyy-mm-dd
        - schema:
            type: string
            example: "2016-09-28"
            format: date
          in: query
          name: "range[to]"
          description: yyyy-mm-dd
        - schema:
            type: integer
            format: int32
            example: -1
            minimum: -1
            maximum: 370
          in: query
          name: "range[size]"
          description: size of the returned range
        - schema:
            type: string
            default: Europe/Paris
            example: Europe/Paris
          in: query
          name: timezone
          description: 'determine what the current time is. If you live in Brazil, "today" will be hours apart from Paris. Use your timezone to get results relative to your location.'
      x-stoplight:
        id: fy8l7o3sz1jyo
  "/dofus2/{language}/almanax/{date}":
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
          example: fr
        name: language
        in: path
        required: true
        description: code
      - schema:
          type: string
          example: "2020-07-14"
          format: date
        name: date
        in: path
        required: true
        description: yyyy-mm-dd
    get:
      summary: Single Almanax Date
      tags:
        - almanax
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Almanax-Entry"
              examples:
                9/11:
                  value:
                    bonus:
                      description: "Les quantités de ressources récupérées par les récolteurs et les chasseurs sont augmentées de 50 % dans toutes les zones influencées par une anomalie temporelle. De plus, les gains d'expérience et les chances d'obtenir du butin sont augmentés de 25 % dans la zone du Sanctuaire des Dragoeufs."
                      type:
                        id: reward-bonus
                        name: Bonus des anomalies
                    date: "2022-09-11"
                    tribute:
                      item:
                        ankama_id: 8362
                        image_urls:
                          hd: "https://api.dofusdu.de/dofus2/img/item/59611-800.png"
                          hq: "https://api.dofusdu.de/dofus2/img/item/59611-400.png"
                          icon: "https://api.dofusdu.de/dofus2/img/item/59611.png"
                          sd: "https://api.dofusdu.de/dofus2/img/item/59611-200.png"
                        name: Peau de Dragnarok
                        subtype: resources
                      quantity: 2
      operationId: get-almanax-date
      description: Get a single date. There are not more details in the returned object than the normal range endpoint.
      x-stoplight:
        id: d0000xjgaenyh
  /dofus2/meta/elements:
    get:
      summary: Effects and Condition Elements
      tags:
        - meta
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                id = index:
                  value:
                    - Vitality
                    - Intelligence
      operationId: get-meta-elements
      description: Get the mappings for all specific elements that are linked in the dataset. All names are english. Translations are not needed because of a global unique id which is the index inside the array. Future elements will get a higher id.
      parameters: []
      x-stoplight:
        id: 4oyiu8nbwwgds
    parameters: []
  /dofus2/meta/version:
    get:
      summary: Game Version
      tags:
        - meta
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  release:
                    type: string
                  update_stamp:
                    type: string
                x-examples:
                  Example 1:
                    version: 2.73.3.5
                    release: main
                    update_stamp: "2024-10-03T22:43:10.420677+02:00"
              examples:
                Main:
                  value:
                    version: 2.73.3.5
                    release: main
                    update_stamp: "2024-10-03T22:43:10.420677+02:00"
      operationId: get-meta-version
      description: The current game version of the hosted data.
      parameters: []
      x-stoplight:
        id: ha9mde87rn0in
    parameters: []
  /dofus2/meta/search/types:
    get:
      summary: Available Game Search Types
      tags:
        - meta
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                List:
                  value:
                    - items-consumables
                    - items-cosmetics
                    - items-resources
                    - items-equipment
                    - items-quest_items
                    - mounts
                    - sets
      operationId: get-game-search-types
      description: "Get all types for /{game}/{lang}/search available for filtering. All names are english for comparing them inside applications. Order is fixed so you can compare indices instead of strings."
      parameters: []
      x-stoplight:
        id: v67mknkhaif2h
    parameters: []
  /dofus2/meta/items/types:
    get:
      summary: Available Item Types
      tags:
        - meta
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                List:
                  value:
                    - items-consumables
                    - items-cosmetics
                    - items-resources
                    - items-equipment
                    - items-quest_items
                    - mounts
                    - sets
      operationId: get-item-types
      description: |-
        Get all types of all items. Primarily used for filtering more detailed types in listings or search endpoints.
        All names are english for comparing them inside applications.
        Ordering is not guaranteed to persist with game updates.
      parameters: []
      x-stoplight:
        id: j8a5zpi8i20xe
    parameters: []
  "/dofus2/meta/{language}/almanax/bonuses":
    get:
      summary: Available Almanax Bonuses
      tags:
        - meta
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                x-examples:
                  example-1:
                    - id: reward-bonus
                      name: Reward Bonus
                    - id: loot
                      name: Loot
                    - id: plenty-of-fish
                      name: Plenty of fish
              examples:
                en:
                  value:
                    - id: reward-bonus
                      name: Reward Bonus
                    - id: loot
                      name: Loot
                    - id: plenty-of-fish
                      name: Plenty of fish
      operationId: get-meta-almanax-bonuses
      description: Get all the available bonuses and their id for filtering them in the range endpoint.
      parameters: []
      x-stoplight:
        id: y3rp6gd28quli
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
          example: fr
        name: language
        in: path
        required: true
  "/dofus2/meta/{language}/almanax/bonuses/search":
    get:
      summary: Search Available Almanax Bonuses
      tags:
        - meta
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                x-examples:
                  example-1:
                    - id: reward-bonus
                      name: Reward Bonus
                    - id: loot
                      name: Loot
                    - id: plenty-of-fish
                      name: Plenty of fish
              examples:
                en:
                  value:
                    - id: reward-bonus
                      name: Reward Bonus
                    - id: loot
                      name: Loot
                    - id: plenty-of-fish
                      name: Plenty of fish
      operationId: get-meta-almanax-bonuses-search
      description: Search all the available bonuses and their id for filtering them in the range endpoint.
      parameters:
        - schema:
            type: string
            example: abond
          in: query
          name: query
          description: case sensitive search query
          required: true
        - schema:
            type: integer
          in: query
          name: limit
          description: maximum number of returned results
      x-stoplight:
        id: wacmug1sb1oe9
    parameters:
      - schema:
          type: string
          enum:
            - en
            - fr
            - de
            - it
            - es
          example: fr
        name: language
        in: path
        required: true
        description: a valid language code
  /meta/webhooks/twitter:
    get:
      summary: Get Twitter Hook Metainfo
      tags:
        - webhooks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    items:
                      type: string
                x-examples:
                  example-1:
                    subscriptions:
                      - dofus2_en
                      - dofus2_fr
                      - dofus2_es
                      - dofus2_it
                      - dofus2_de
              examples:
                Example 1:
                  value:
                    subscriptions:
                      - string
      operationId: get-meta-webhooks-twitter
      description: "Get a list of all available subscriptions. "
      x-stoplight:
        id: x2su9os7cdw6n
  /meta/webhooks/rss:
    get:
      summary: Get RSS Hook Metainfo
      tags:
        - webhooks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    items:
                      type: string
                x-examples:
                  example-1:
                    subscriptions:
                      - dofus2_en
                      - dofus2_fr
                      - dofus2_es
                      - dofus2_it
                      - dofus2_de
      operationId: get-meta-webhooks-rss
      description: "Get a list of all available subscriptions. "
      x-stoplight:
        id: ryea84v1mw1ak
  /meta/webhooks/almanax:
    get:
      summary: Get Almanax Hook Metainfo
      tags:
        - webhooks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    items:
                      type: string
                x-examples:
                  example-1:
                    subscriptions:
                      - dofus2_en
                      - dofus2_fr
                      - dofus2_es
                      - dofus2_it
                      - dofus2_de
              examples:
                example-1:
                  value:
                    subscriptions:
                      - string
      operationId: get-meta-webhooks-almanax
      description: "Get a list of all available subscriptions. "
      x-stoplight:
        id: 4lrj2cmhjnm2s
  "/webhooks/rss/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get RSS Hook
      tags:
        - webhooks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RssWebhook"
              examples:
                Example:
                  value:
                    id: string
                    whitelist: null
                    blacklist: null
                    subscriptions:
                      - dofus2-fr-official-news
                    format: discord
                    preview_length: 150
                    created_at: "2022-10-25T15:32:37.406281+02:00"
                    last_fired_at: "2022-10-25T15:35:37.103240+02:00"
                    updated_at: "2022-10-25T15:32:37.406281+02:00"
      operationId: get-webhooks-rss-id
      description: Retrieve details about an existing RSS Webhook with a given uuid.
      x-stoplight:
        id: u2trp6aa29zke
    put:
      summary: Update RSS Hook
      operationId: put-webhooks-rss-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RssWebhook"
              examples:
                Example:
                  value:
                    id: string
                    whitelist: null
                    blacklist: null
                    subscriptions:
                      - dofus2-fr-official-news
                    format: discord
                    preview_length: 150
                    created_at: "2022-10-25T15:32:37.406281+02:00"
                    last_fired_at: "2022-10-25T15:35:37.103240+02:00"
                    updated_at: "2022-10-25T15:32:37.406281+02:00"
      description: "Update the details of a RSS Webhook. All fields are optional and arrays will be overwritten, so always put all selected items of an array."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutRSSWebhook"
            examples:
              Example:
                value:
                  whitelist: null
                  blacklist: null
                  subscriptions: null
                  preview_length: 60
        description: ""
      tags:
        - webhooks
      x-stoplight:
        id: gxa2aqic6jm2e
    delete:
      summary: Unregister RSS Hook
      operationId: delete-webhooks-rss-id
      responses:
        "204":
          description: No Content
      description: Delete a Webhook from the service.
      tags:
        - webhooks
      x-stoplight:
        id: dzqt93ubm594i
  "/webhooks/twitter/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Twitter Hook
      tags:
        - webhooks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TwitterWebhook"
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    whitelist:
                      - unity
                    blacklist:
                      - retro
                    subscriptions:
                      - DOFUS_EN
                    format: discord
                    preview_length: 280
                    created_at: "2022-10-25T15:32:37.406281+02:00"
                    last_fired_at: "2022-10-25T15:35:37.103240+02:00"
                    updated_at: "2022-10-25T15:32:37.406281+02:00"
      operationId: get-webhooks-twitter-id
      description: Retrieve details about an existing Twitter Webhook with a given uuid.
      x-stoplight:
        id: b17dskp86rnqw
    put:
      summary: Update Twitter Hook
      operationId: put-webhooks-twitter-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TwitterWebhook"
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    whitelist:
                      - unity
                    blacklist:
                      - retro
                    subscriptions:
                      - DOFUS_EN
                    format: discord
                    preview_length: 280
                    created_at: "2022-10-25T15:32:37.406281+02:00"
                    last_fired_at: "2022-10-25T15:35:37.103240+02:00"
                    updated_at: "2022-10-25T15:32:37.406281+02:00"
      description: "Update the details of a Twitter Webhook. All fields are optional and arrays will be overwritten, so always put all selected items of an array."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutTwitterWebhook"
            examples:
              Example:
                value:
                  whitelist:
                    - retro
                  blacklist: null
                  subscriptions:
                    - dofus2-en-official-changelog
                  preview_length: null
        description: ""
      tags:
        - webhooks
      x-stoplight:
        id: qp6uqqs05jye4
    delete:
      summary: Unregister Twitter Hook
      operationId: delete-webhooks-twitter-id
      responses:
        "204":
          description: No Content
      description: Delete a Webhook from the service.
      tags:
        - webhooks
      x-stoplight:
        id: 4o1c8msan9y9v
  "/webhooks/almanax/{id}":
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Almanax Hook
      tags:
        - webhooks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlmanaxWebhook"
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    daily_settings:
                      timezone: Europe/Paris
                      midnight_offset: 0
                    bonus_whitelist:
                      - plenty-to-harvest
                    bonus_blacklist: null
                    subscriptions:
                      - dofus2_en
                    iso_date: false
                    mentions:
                      kolossium-experience:
                        - discord_id: 1234
                          is_role: true
                          ping_days_before: null
                    intervals:
                      - daily
                    weekly_weekday: sunday
                    created_at: "2019-08-24T14:15:22Z"
                    last_fired_at: "2019-08-24T14:15:22Z"
                    updated_at: "2019-08-24T14:15:22Z"
      operationId: get-webhooks-almanax-id
      description: Retrieve details about an existing Almanax Webhook with a given uuid.
      x-stoplight:
        id: tsnn86pyx3vu8
    put:
      summary: Update Almanax Hook
      operationId: put-webhooks-almanax-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlmanaxWebhook"
              examples:
                Example:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    daily_settings:
                      timezone: Europe/Paris
                      midnight_offset: 0
                    bonus_whitelist:
                      - plenty-to-harvest
                    bonus_blacklist: null
                    subscriptions:
                      - dofus2_en
                    iso_date: false
                    mentions:
                      kolossium-experience:
                        - discord_id: 1234
                          is_role: true
                          ping_days_before: null
                    intervals:
                      - daily
                    weekly_weekday: sunday
                    created_at: "2019-08-24T14:15:22Z"
                    last_fired_at: "2019-08-24T14:15:22Z"
                    updated_at: "2019-08-24T14:15:22Z"
      description: "Update the details of an Almanax Webhook. All fields are optional and arrays will be overwritten, so always put all selected items of an array."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutAlmanaxWebhook"
            examples:
              Example:
                value:
                  bonus_whitelist: []
                  bonus_blacklist: null
                  subscriptions: null
                  daily_settings:
                    timezone: Europe/Paris
                    midnight_offset: 0
                  iso_date: false
                  mentions:
                    kolossium-experience:
                      - discord_id: 1234
                        is_role: true
                        ping_days_before: null
                  intervals:
                    - daily
                  weekly_weekday: sunday
      tags:
        - webhooks
      x-stoplight:
        id: okizp8l5z3on3
    delete:
      summary: Unregister Almanax Hook
      operationId: delete-webhooks-almanax-id
      responses:
        "204":
          description: No Content
      description: Delete a Webhook from the service.
      tags:
        - webhooks
      x-stoplight:
        id: plnosst21p855
  /webhooks/rss:
    post:
      summary: Register RSS Hook
      operationId: post-webhooks-rss
      responses:
        "200":
          description: OK
      description: Register a new Webhook to post RSS news as soon as they are posted.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRSSWebhook"
            examples:
              Example:
                value:
                  whitelist:
                    - retro
                  blacklist: null
                  subscriptions:
                    - dofus2-en-official-news
                  format: discord
                  preview_length: 2000
                  callback: "https://discord.com/api/webhooks/XYZ"
        description: ""
      tags:
        - webhooks
      x-stoplight:
        id: x27z57xp45wte
  /webhooks/twitter:
    post:
      summary: Register Twitter Hook
      operationId: post-webhooks-twitter
      responses:
        "200":
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTwitterWebhook"
            examples:
              Example:
                value:
                  whitelist: null
                  blacklist: null
                  subscriptions:
                    - DOFUSfr
                  format: discord
                  preview_length: 280
                  callback: "https://discord.com/api/webhooks/XYZ"
        description: ""
      description: Register a new Webhook to post Twitter updates as soon as they are posted.
      tags:
        - webhooks
      x-stoplight:
        id: n7hruj6bwd63z
  /webhooks/almanax:
    post:
      summary: Register Almanax Hook
      operationId: post-webhooks-almanax
      responses:
        "200":
          description: OK
      description: Register a new Webhook to post Almanax updates.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlmanaxWebhook"
            examples:
              Example:
                value:
                  bonus_whitelist: null
                  bonus_blacklist: null
                  subscriptions:
                    - dofus2_fr
                  format: discord
                  callback: "https://discord.com/api/webhooks/XYZ"
                  daily_settings:
                    timezone: Europe/Paris
                    midnight_offset: 0
                  iso_date: false
                  mentions:
                    kolossium-experience:
                      - discord_id: 1234
                        is_role: true
                        ping_days_before: null
                  intervals:
                    - daily
                  weekly_weekday: sunday
        description: ""
      tags:
        - webhooks
      x-stoplight:
        id: rgb2d0j47fr0l
components:
  schemas:
    Items-List-Entry-Typed:
      type: object
      x-examples: {}
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        type:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
        item_subtype:
          type: string
          description: The API item category. Can be used to build the request URL for this particular item. Always english.
        level:
          type: integer
        image_urls:
          $ref: "#/components/schemas/Image-Urls"
      x-stoplight:
        id: r5b3ia3ectz8q
    Cosmetic:
      type: object
      x-examples: {}
      x-stoplight:
        id: rfawtzjwbqvco
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
              minimum: 0
        level:
          type: integer
        pods:
          type: integer
        image_urls:
          $ref: "#/components/schemas/Image-Urls"
        effects:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Effects-Entry"
        conditions:
          type: array
          deprecated: true
          nullable: true
          items:
            $ref: "#/components/schemas/Condition-Entry"
        condition_tree:
          nullable: true
          $ref: "#/components/schemas/Condition-Tree-Node"
        recipe:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Recipe-Entry"
    Recipe-Entry:
      type: object
      properties:
        item_ankama_id:
          type: integer
        item_subtype:
          type: string
        quantity:
          type: integer
      x-examples: {}
      title: ""
      x-stoplight:
        id: mb2ht06tym8se
    Set-Effects-Entry:
      type: object
      x-examples: {}
      x-tags:
        - meta
      properties:
        int_minimum:
          type: integer
          description: "minimum int value, can be a single if ignore_int_max and no ignore_int_min"
        int_maximum:
          type: integer
          description: "maximum int value, if not ignore_int_max and not ignore_int_min, the effect has a range value"
        type:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
            is_meta:
              type: boolean
              description: 'true if a type is generated from the Api instead of Ankama. In that case, always prefer showing the templated string and omit everything else. The "name" field will have an english description of the meta type. An example for such effects are class sets effects.'
            is_active:
              type: boolean
              description: Affects target or source actively.
        ignore_int_min:
          type: boolean
          description: "ignore the int min field because the actual value is a string. For readability the templated field is the only important field in this case. "
        ignore_int_max:
          type: boolean
          description: "ignore the int max field, if ignore_int_min is true, int min is a single value"
        formatted:
          type: string
          description: all fields from above encoded in a single string
        item_combination:
          type: integer
          description: how many items it needs to trigger this effect with the given set
    Effects-Entry:
      type: object
      x-examples: {}
      x-tags:
        - meta
      properties:
        int_minimum:
          type: integer
          description: "minimum int value, can be a single if ignore_int_max and no ignore_int_min"
        int_maximum:
          type: integer
          description: "maximum int value, if not ignore_int_max and not ignore_int_min, the effect has a range value"
        type:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
            is_meta:
              type: boolean
              description: 'true if a type is generated from the Api instead of Ankama. In that case, always prefer showing the templated string and omit everything else. The "name" field will have an english description of the meta type. An example for such effects are class sets effects.'
            is_active:
              type: boolean
              description: Affects target or source actively.
        ignore_int_min:
          type: boolean
          description: "ignore the int min field because the actual value is a string. For readability the templated field is the only important field in this case. "
        ignore_int_max:
          type: boolean
          description: "ignore the int max field, if ignore_int_min is true, int min is a single value"
        formatted:
          type: string
          description: all fields from above encoded in a single string
      x-stoplight:
        id: frixo5s02x57v
    Image-Urls:
      type: object
      x-examples:
        All available:
          icon: "https://dofusdu.de/dofus/img/mount/1.png"
          sd: "https://dofusdu.de/dofus/img/mount/1-200.png"
          hq: "https://dofusdu.de/dofus/img/mount/1-400.png"
          hd: "https://dofusdu.de/dofus/img/mount/1-800.png"
        HD not rendered:
          icon: "https://dofusdu.de/dofus/img/mount/1.png"
          sd: "https://dofusdu.de/dofus/img/mount/1-200.png"
          hq: "https://dofusdu.de/dofus/img/mount/1-400.png"
          hd: null
      description: "All images except icon are rendered in the background which can take some time (up to hours if all data is completely generated from scratch). Because of this, they can be null if they are not yet rendered."
      properties:
        icon:
          type: string
          description: "60x60 px, always available"
        sd:
          type: string
          description: 200x200 px
          nullable: true
        hq:
          type: string
          description: 400x400 px
          nullable: true
        hd:
          type: string
          description: 800x800 px
          nullable: true
      title: ""
      x-stoplight:
        id: ebvisb0pnf46t
    Resource:
      type: object
      x-examples: {}
      x-stoplight:
        id: 10otndsm7bw3k
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
              minimum: 0
        level:
          type: integer
        pods:
          type: integer
        image_urls:
          $ref: "#/components/schemas/Image-Urls"
        effects:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Effects-Entry"
        conditions:
          type: array
          deprecated: true
          nullable: true
          items:
            $ref: "#/components/schemas/Condition-Entry"
        condition_tree:
          nullable: true
          $ref: "#/components/schemas/Condition-Tree-Node"
        recipe:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Recipe-Entry"
      description: ""
    Item-List-Entry:
      type: object
      x-examples: {}
      x-stoplight:
        id: t7g4fratmdgkx
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        type:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
        level:
          type: integer
        image_urls:
          $ref: "#/components/schemas/Image-Urls"
        recipe:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Recipe-Entry"
        description:
          type: string
          x-stoplight:
            id: t04qfhnlgc4kw
          nullable: true
        conditions:
          type: array
          deprecated: true
          nullable: true
          items:
            $ref: "#/components/schemas/Condition-Entry"
        condition_tree:
          nullable: true
          $ref: "#/components/schemas/Condition-Tree-Node"
        effects:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Effects-Entry"
        is_weapon:
          nullable: true
          type: boolean
        pods:
          nullable: true
          type: integer
        parent_set:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            name:
              type: string
        critical_hit_probability:
          nullable: true
          type: integer
        critical_hit_bonus:
          nullable: true
          type: integer
        is_two_handed:
          nullable: true
          type: boolean
        max_cast_per_turn:
          nullable: true
          type: integer
        ap_cost:
          nullable: true
          type: integer
        range:
          nullable: true
          type: object
          properties:
            min:
              type: integer
            max:
              type: integer
    Equipment-Set:
      x-stoplight:
        id: xmkp08r20yq44
      type: object
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        equipment_ids:
          type: array
          items:
            type: integer
        effects:
          type: array
          nullable: true
          items:
            type: array
            items:
              $ref: "#/components/schemas/Set-Effects-Entry"
        highest_equipment_level:
          type: integer
        is_cosmetic:
          type: boolean
          x-stoplight:
            id: 7d1w5073pqtt7
    Set-List-Entry:
      type: object
      x-examples: {}
      x-stoplight:
        id: jzo6pgvj144er
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        items:
          type: integer
          description: amount
        level:
          type: integer
        effects:
          type: array
          nullable: true
          items:
            type: array
            items:
              $ref: "#/components/schemas/Set-Effects-Entry"
        equipment_ids:
          type: array
          nullable: true
          items:
            type: integer
        is_cosmetic:
          type: boolean
          x-stoplight:
            id: uztiykrx0bobf
    Mount:
      title: ""
      x-stoplight:
        id: t56c7qu8hapx4
      type: object
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        family_name:
          type: string
        image_urls:
          $ref: "#/components/schemas/Image-Urls"
        effects:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Effects-Entry"
    Mount-List-Entry:
      type: object
      x-examples: {}
      title: ""
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        family_name:
          type: string
        image_urls:
          $ref: "#/components/schemas/Image-Urls"
        effects:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Effects-Entry"
      x-stoplight:
        id: rie41mn8llctq
    Items-List-Paged:
      title: ""
      x-stoplight:
        id: wp54br61flkau
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links-Paged"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item-List-Entry"
    Sets-List-Paged:
      x-stoplight:
        id: kr369f842c2w9
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links-Paged"
        sets:
          type: array
          items:
            $ref: "#/components/schemas/Set-List-Entry"
    Mounts-List-Paged:
      title: ""
      x-stoplight:
        id: 67iikn0tj64zs
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links-Paged"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Mount-List-Entry"
    Links-Paged:
      title: ""
      x-stoplight:
        id: 60s06npdim49u
      type: object
      properties:
        first:
          type: string
          nullable: true
        prev:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
        last:
          type: string
          nullable: true
    Condition-Entry:
      x-stoplight:
        id: cfe46yvylz0b5
      type: object
      properties:
        operator:
          type: string
        int_value:
          type: integer
        element:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
      description: ""
    Condition-Tree-Node:
      x-stoplight:
        id: kv2rib65himdt
      x-examples: {}
      oneOf:
        - $ref: "#/components/schemas/Condition-Tree-Relation"
        - $ref: "#/components/schemas/Condition-Tree-Leaf"
    Condition-Tree-Leaf:
      type: object
      x-stoplight:
        id: qpb8of1ljcb4y
      x-examples: {}
      properties:
        is_operand:
          type: boolean
          default: true
          description: always "true" for the leaf of a tree
        condition:
          $ref: "#/components/schemas/Condition-Entry"
    Condition-Tree-Relation:
      type: object
      x-stoplight:
        id: 1ubaw97npzw7b
      x-examples: {}
      properties:
        is_operand:
          type: boolean
          default: false
          description: always "false" for relations
        relation:
          type: string
          description: '"and", "or"'
          example: and
          default: and
        children:
          type: array
          items:
            $ref: "#/components/schemas/Condition-Tree-Node"
    Equipment:
      type: object
      x-examples: {}
      x-stoplight:
        id: wl02ch9nip85b
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
        is_weapon:
          type: boolean
        level:
          type: integer
        pods:
          type: integer
        image_urls:
          $ref: "#/components/schemas/Image-Urls"
        effects:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Effects-Entry"
        conditions:
          type: array
          deprecated: true
          nullable: true
          items:
            $ref: "#/components/schemas/Condition-Entry"
        condition_tree:
          nullable: true
          $ref: "#/components/schemas/Condition-Tree-Node"
        recipe:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Recipe-Entry"
        parent_set:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            name:
              type: string
    Weapon:
      type: object
      x-examples: {}
      x-stoplight:
        id: 904f1afmcifdp
      properties:
        ankama_id:
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          type: object
          properties:
            name:
              type: string
            id:
              type: integer
        is_weapon:
          type: boolean
          description: always true when the item is a weapon. Many fields are now available. Always check for this flag first when getting single equipment items.
        level:
          type: integer
        pods:
          type: integer
        image_urls:
          $ref: "#/components/schemas/Image-Urls"
        effects:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Effects-Entry"
        conditions:
          type: array
          deprecated: true
          nullable: true
          items:
            $ref: "#/components/schemas/Condition-Entry"
        condition_tree:
          nullable: true
          $ref: "#/components/schemas/Condition-Tree-Node"
        critical_hit_probability:
          type: integer
        critical_hit_bonus:
          type: integer
        is_two_handed:
          type: boolean
        max_cast_per_turn:
          type: integer
        ap_cost:
          type: integer
        range:
          type: object
          properties:
            min:
              type: integer
            max:
              type: integer
        recipe:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/Recipe-Entry"
        parent_set:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            name:
              type: string
    Almanax-Entry:
      type: object
      x-examples: {}
      x-stoplight:
        id: vrmvy5zbqek3g
      properties:
        bonus:
          type: object
          properties:
            description:
              type: string
            type:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
        date:
          type: string
        tribute:
          type: object
          properties:
            item:
              type: object
              properties:
                ankama_id:
                  type: integer
                image_urls:
                  $ref: "#/components/schemas/Image-Urls"
                name:
                  type: string
                subtype:
                  type: string
            quantity:
              type: integer
        reward_kamas:
          type: integer
          x-stoplight:
            id: oneb4usnoodzz
          description: Amount of Kamas you get as reward for finishing this Almanax quest.
          nullable: true
    CreateTwitterWebhook:
      type: object
      x-examples:
        Example:
          whitelist: null
          blacklist: null
          subscriptions:
            - DOFUSfr
          format: discord
          preview_length: 280
          callback: "https://discord.com/api/webhooks/XYZ"
      title: CreateTwitterWebhook
      description: ""
      properties:
        whitelist:
          type: array
          nullable: true
          items:
            type: string
        blacklist:
          type: array
          nullable: true
          items:
            type: string
        subscriptions:
          type: array
          description: Get the available subscriptions with /meta/webhooks/twitter
          uniqueItems: true
          minItems: 1
          items:
            type: string
        format:
          type: string
          enum:
            - discord
        preview_length:
          type: integer
          example: 280
          format: int32
          minimum: 0
          maximum: 280
          nullable: true
        callback:
          type: string
          description: Discord Webhook URL
          format: uri
          example: "https://discord.com/api/webhooks/XYZ"
      required:
        - subscriptions
        - format
        - callback
      x-stoplight:
        id: 7k5ozheexjnxv
    CreateRSSWebhook:
      type: object
      x-examples:
        Example:
          whitelist:
            - retro
          blacklist: null
          subscriptions:
            - dofus2-en-official-news
          format: discord
          preview_length: 2000
          callback: "https://discord.com/api/webhooks/XYZ"
      title: CreateRSSWebhook
      description: ""
      properties:
        whitelist:
          type: array
          nullable: true
          items:
            type: string
        blacklist:
          type: array
          nullable: true
          items:
            type: string
        subscriptions:
          type: array
          description: Get the available subscriptions with /meta/webhooks/rss
          uniqueItems: true
          minItems: 1
          items:
            type: string
        format:
          type: string
          enum:
            - discord
        preview_length:
          type: integer
          example: 2000
          format: int32
          minimum: 0
          maximum: 4000
          nullable: true
        callback:
          type: string
          description: Discord Webhook URL
          format: uri
          example: "https://discord.com/api/webhooks/XYZ"
      required:
        - subscriptions
        - format
        - callback
      x-stoplight:
        id: j8vhvwqn3jeoe
    PutRSSWebhook:
      type: object
      x-examples:
        Example:
          whitelist: null
          blacklist: null
          subscriptions: null
          preview_length: 60
      title: PutRSSWebhook
      description: ""
      properties:
        whitelist:
          type: array
          nullable: true
          items:
            type: string
        blacklist:
          type: array
          nullable: true
          items:
            type: string
        subscriptions:
          type: array
          description: Get the available subscriptions with /meta/webhooks/rss
          uniqueItems: true
          nullable: true
          items:
            type: string
        preview_length:
          type: integer
          example: 2000
          format: int32
          minimum: 0
          maximum: 4000
          nullable: true
      x-stoplight:
        id: 7uavm6v1r9v4y
    PutTwitterWebhook:
      type: object
      x-examples:
        Example:
          whitelist:
            - retro
          blacklist: null
          subscriptions:
            - dofus2-en-official-changelog
          preview_length: null
      title: PutTwitterWebhook
      description: ""
      properties:
        whitelist:
          type: array
          nullable: true
          items:
            type: string
        blacklist:
          type: array
          nullable: true
          items:
            type: string
        subscriptions:
          type: array
          description: Get the available subscriptions with /meta/webhooks/twitter
          uniqueItems: true
          nullable: true
          items:
            type: string
        preview_length:
          type: integer
          example: 280
          format: int32
          minimum: 0
          maximum: 280
          nullable: true
      x-stoplight:
        id: omtuayunn9wfk
    CreateAlmanaxWebhook:
      type: object
      x-examples:
        Example:
          bonus_whitelist: null
          bonus_blacklist: null
          subscriptions:
            - dofus2_fr
          format: discord
          callback: "https://discord.com/api/webhooks/XYZ"
          daily_settings:
            timezone: Europe/Paris
            midnight_offset: 0
          iso_date: false
          mentions:
            kolossium-experience:
              - discord_id: 1234
                is_role: true
                ping_days_before: null
          intervals:
            - daily
          weekly_weekday: sunday
      title: CreateAlmanaxWebhook
      properties:
        bonus_whitelist:
          type: array
          description: "from all available bonuses (ids) from /dofus2/meta/{language}/almanax/bonuses"
          nullable: true
          items:
            type: string
        bonus_blacklist:
          type: array
          description: "from all available bonuses (ids) from /dofus2/meta/{language}/almanax/bonuses"
          nullable: true
          items:
            type: string
        subscriptions:
          type: array
          description: Get the available subscriptions with /meta/webhooks/almanax
          items:
            type: string
        format:
          type: string
          enum:
            - discord
        callback:
          type: string
          description: Discord Webhook URL
          example: "https://discord.com/api/webhooks/XYZ"
          format: uri
        daily_settings:
          type: object
          nullable: true
          properties:
            timezone:
              type: string
              default: Europe/Paris
              example: Europe/Paris
              description: Timezone of your community to determine midnight.
              nullable: true
            midnight_offset:
              type: integer
              minimum: 0
              maximum: 23
              default: 0
              example: 0
              description: "Hours added to midnight at the selected timezone. 8 = 8:00 in the morning."
              nullable: true
        iso_date:
          type: boolean
          default: false
          description: "If false, it will use common local time formats and weekday translations. If true, the format is YYYY-MM-DD."
          nullable: true
        mentions:
          type: object
          description: Almanax bonus ids mapped to array of mentions.
          example:
            kolossium-experience:
              - discord_id: 1234
                is_role: true
                ping_days_before: null
          additionalProperties:
            type: array
            items:
              type: object
              description: Mention
              properties:
                discord_id:
                  description: User or role ID directly from Discord. Activate developer mode and right click a user or role to get them.
                  example: 1234
                  type: integer
                is_role:
                  description: Whether an ID describes a role (true) or user (false). This is needed for formatting the mention command so Discord understands it.
                  example: true
                  type: boolean
                ping_days_before:
                  description: Get a mention days before the bonus comes up. It will post on the specified time. Also works when the interval is not daily.
                  type: integer
                  example: 1
                  minimum: 1
                  maximum: 31
                  nullable: true
          nullable: true
        intervals:
          type: array
          uniqueItems: true
          example:
            - daily
          description: |-
            - Daily posts each day, filtering with Black/Whitelist and mentions are applied daily.
            - Weekly posts the next 7 days (excluding the posting day) once per week at the specified time. With only weekly selected, of all mentions, only prior notices will come through daily. The 7 day preview gets filtered by the Black/Whitelist.
            - Monthly posts a preview of the next month from first to last date. The post will be on the last day of a month (ignoring day of the week) at the specified time. Mentions and filtering works like weekly.
            The biggest difference between daily and the other two is that daily always posts the current day while monthly and weekly only show future days. You can always combine the intervals by selecting multiple intervals for one hook or create multiple hooks for the same channel with different settings to get every highly specific combination you want.
          items:
            type: string
            enum:
              - daily
              - weekly
              - monthly
        weekly_weekday:
          type: string
          enum:
            - sunday
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
          example: sunday
          description: When to post the weekly preview at the specified time.
          nullable: true
      required:
        - subscriptions
        - format
        - callback
        - intervals
      x-stoplight:
        id: pyyh22g8b7mk0
    PutAlmanaxWebhook:
      type: object
      x-examples:
        Example:
          bonus_whitelist: []
          bonus_blacklist: null
          subscriptions: null
          daily_settings:
            timezone: Europe/Paris
            midnight_offset: 0
          iso_date: false
          mentions:
            kolossium-experience:
              - discord_id: 1234
                is_role: true
                ping_days_before: null
          intervals:
            - daily
          weekly_weekday: sunday
      title: PutAlmanaxWebhook
      properties:
        bonus_whitelist:
          type: array
          description: |-
            from all available bonuses (ids) from /dofus2/meta/{language}/almanax/bonuses.
            Delete old entries with empty array []. Just null changes nothing.
          nullable: true
          items:
            type: string
        bonus_blacklist:
          type: array
          description: "from all available bonuses (ids) from /dofus2/meta/{language}/almanax/bonuses. Delete old entries with empty array []. Just null changes nothing."
          nullable: true
          items:
            type: string
        subscriptions:
          type: array
          description: Get the available subscriptions with /meta/webhooks/almanax
          nullable: true
          items:
            type: string
        daily_settings:
          type: object
          nullable: true
          properties:
            timezone:
              type: string
              default: Europe/Paris
              example: Europe/Paris
              description: Timezone of your community to determine midnight.
              nullable: true
            midnight_offset:
              type: integer
              minimum: 0
              maximum: 23
              default: 0
              example: 0
              description: "Hours added to midnight at the selected timezone. 8 = 8:00 in the morning."
              nullable: true
        iso_date:
          type: boolean
          default: false
          description: "If false, it will use common local time formats and weekday translations. If true, the format is YYYY-MM-DD."
          nullable: true
        mentions:
          type: object
          description: Almanax bonus ids mapped to array of mentions.
          example:
            kolossium-experience:
              - discord_id: 1234
                is_role: true
                ping_days_before: null
          additionalProperties:
            type: array
            items:
              type: object
              description: Mention
              properties:
                discord_id:
                  description: User or role ID directly from Discord. Activate developer mode and right click a user or role to get them.
                  example: 1234
                  type: integer
                is_role:
                  description: Whether an ID describes a role (true) or user (false). This is needed for formatting the mention command so Discord understands it.
                  example: true
                  type: boolean
                ping_days_before:
                  description: Get a mention days before the bonus comes up. It will post on the specified time. Also works when the interval is not daily.
                  type: integer
                  example: 1
                  minimum: 1
                  maximum: 31
                  nullable: true
        intervals:
          type: array
          uniqueItems: true
          example:
            - daily
          nullable: true
          items:
            type: string
            enum:
              - daily
              - weekly
              - monthly
        weekly_weekday:
          type: string
          enum:
            - sunday
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
          example: sunday
          description: When to post the weekly preview at the specified time.
          nullable: true
      x-stoplight:
        id: htkpa9vrybcye
    RssWebhook:
      type: object
      x-examples:
        Example:
          id: string
          whitelist: null
          blacklist: null
          subscriptions:
            - dofus2-fr-official-news
          format: discord
          preview_length: 150
          created_at: "2022-10-25T15:32:37.406281+02:00"
          last_fired_at: "2022-10-25T15:35:37.103240+02:00"
          updated_at: "2022-10-25T15:32:37.406281+02:00"
      properties:
        id:
          type: string
        whitelist:
          type: array
          nullable: true
          items:
            type: string
        blacklist:
          type: array
          nullable: true
          items:
            type: string
        subscriptions:
          type: array
          items:
            type: string
        format:
          type: string
          enum:
            - discord
        preview_length:
          type: integer
          example: 2000
          format: int32
          minimum: 0
          maximum: 4000
        created_at:
          type: string
          example: "2022-10-25T15:32:37.406281+02:00"
          format: date-time
        last_fired_at:
          type: string
          format: date-time
          example: "2022-10-25T15:35:37.103240+02:00"
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: "2022-10-25T15:32:37.406281+02:00"
      title: RSSWebhook
      x-stoplight:
        id: e4x9508e2otmo
    TwitterWebhook:
      type: object
      x-examples:
        Example:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          whitelist:
            - unity
          blacklist:
            - retro
          subscriptions:
            - DOFUS_EN
          format: discord
          preview_length: 280
          created_at: "2022-10-25T15:32:37.406281+02:00"
          last_fired_at: "2022-10-25T15:35:37.103240+02:00"
          updated_at: "2022-10-25T15:32:37.406281+02:00"
      title: TwitterWebhook
      properties:
        id:
          type: string
          format: uuid
        whitelist:
          type: array
          nullable: true
          items:
            type: string
        blacklist:
          type: array
          nullable: true
          items:
            type: string
        subscriptions:
          type: array
          items:
            type: string
        format:
          type: string
          enum:
            - discord
        preview_length:
          type: integer
          example: 280
          format: int32
          minimum: 0
          maximum: 280
        created_at:
          type: string
          example: "2022-10-25T15:32:37.406281+02:00"
          format: date-time
        last_fired_at:
          type: string
          format: date-time
          example: "2022-10-25T15:35:37.103240+02:00"
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: "2022-10-25T15:32:37.406281+02:00"
      x-stoplight:
        id: n7ja34vr6bc0v
    AlmanaxWebhook:
      type: object
      x-examples:
        Example:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          daily_settings:
            timezone: Europe/Paris
            midnight_offset: 0
          bonus_whitelist:
            - plenty-to-harvest
          bonus_blacklist: null
          subscriptions:
            - dofus2_en
          iso_date: false
          mentions:
            kolossium-experience:
              - discord_id: 1234
                is_role: true
                ping_days_before: null
          intervals:
            - daily
          weekly_weekday: sunday
          created_at: "2019-08-24T14:15:22Z"
          last_fired_at: "2019-08-24T14:15:22Z"
          updated_at: "2019-08-24T14:15:22Z"
      title: AlmanaxWebhook
      description: ""
      properties:
        id:
          type: string
          format: uuid
        daily_settings:
          type: object
          properties:
            timezone:
              type: string
              default: Europe/Paris
              example: Europe/Paris
              description: Timezone of your community to determine midnight.
            midnight_offset:
              type: integer
              default: 0
              example: 0
              description: "Hours added to midnight at the selected timezone. 8 = 8:00 in the morning."
        bonus_whitelist:
          type: array
          description: |-
            Only post when these bonuses come up.
            From all available bonuses (ids) from /dofus2/meta/{language}/almanax/bonuses.
          nullable: true
          items:
            type: string
        bonus_blacklist:
          type: array
          description: |-
            Skip the day when these bonuses come up.
            From all available bonuses (ids) from /dofus2/meta/{language}/almanax/bonuses
          nullable: true
          items:
            type: string
        subscriptions:
          type: array
          description: Get the available subscriptions with /meta/webhooks/almanax
          items:
            type: string
        iso_date:
          type: boolean
          default: false
          description: "If false, it will use common local time formats and weekday translations. If true, the format is YYYY-MM-DD."
        mentions:
          type: object
          description: Almanax bonus ids mapped to array of mentions.
          example:
            kolossium-experience:
              - discord_id: 1234
                is_role: true
                ping_days_before: null
          additionalProperties:
            type: array
            items:
              type: object
              description: Mention
              properties:
                discord_id:
                  description: User or role ID directly from Discord. Activate developer mode and right click a user or role to get them.
                  example: 1234
                  type: integer
                is_role:
                  description: Whether an ID describes a role (true) or user (false). This is needed for formatting the mention command so Discord understands it.
                  example: true
                  type: boolean
                ping_days_before:
                  description: Get a mention days before the bonus comes up. It will post on the specified time. Also works when the interval is not daily.
                  type: integer
                  example: 1
                  minimum: 1
                  maximum: 31
                  nullable: true
          nullable: true
        intervals:
          type: array
          uniqueItems: true
          example:
            - daily
          description: |-
            - Daily posts each day, filtering with Black/Whitelist and mentions are applied daily.
            - Weekly posts the next 7 days (excluding the posting day) once per week at the specified time. With only weekly selected, of all mentions, only prior notices will come through daily. The 7 day preview gets filtered by the Black/Whitelist.
            - Monthly posts a preview of the next month from first to last date. The post will be on the last day of a month (ignoring day of the week) at the specified time. Mentions and filtering works like weekly.
            The biggest difference between daily and the other two is that daily always posts the current day while monthly and weekly only show future days. You can always combine the intervals by selecting multiple intervals for one hook or create multiple hooks for the same channel with different settings to get every highly specific combination you want.
          items:
            type: string
            enum:
              - daily
              - weekly
              - monthly
        weekly_weekday:
          type: string
          enum:
            - sunday
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
          example: sunday
          description: When to post the weekly preview at the specified time.
          nullable: true
        created_at:
          type: string
          format: date-time
        last_fired_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
      x-stoplight:
        id: x3oc9iaxf57wv
  securitySchemes: {}
tags:
  - name: almanax
  - name: consumables
  - name: cosmetics
  - name: equipment
  - name: game
  - name: meta
  - name: mounts
  - name: quest items
  - name: resources
  - name: sets
  - name: webhooks
